{ V: "3.4.3", T: new Tournament({UUID: "8376524c-33cf-462e-9f4d-e19c7e55fc5d", LeagueUUID: "0d8bd040-7ed4-11e3-0aa0-020a16dc9f9c", LeagueName: "ORF", SeasonUUID: "58015742-369d-4d5a-876d-3df5822e1b82", SeasonName: "2019", Title: "ORF Poker 20190713", Description: "\"If you're gonna be dumb, you have to be tough!\"", Notes: "", Financials: new FinancialConfig({Buyins: new BuyConfig({Allow: true, Profiles: [new FeeProfile({Name: "ORF Standard", Enabled: true, AllowChange: false, Fee: 200, Rake: new PerPlayerRake([20]), Chips: 10000, Points: 0, BountyChipCost: 0}), new FeeProfile({Name: "ORF-Rebuy-Tourney", Enabled: true, AllowChange: false, Fee: 50, Rake: new PerPlayerRake([20]), Chips: 3000, Points: 0, BountyChipCost: 50}), new FeeProfile({Name: "ORF 500 rake free", Enabled: true, AllowChange: false, Fee: 500, Rake: new PerPlayerRake([0]), Chips: 10000, Points: 0, BountyChipCost: 0}), new FeeProfile({Name: "ORF 500kr 25000chips", Enabled: true, AllowChange: false, Fee: 520, Rake: new PerPlayerRake([20]), Chips: 25000, Points: 0, BountyChipCost: 0})], DefIndex: 0, LastRound: 0, MaxPerPlayer: 0, MaxTotal: 0, MinPlayers: 0}), AddOns: new BuyConfig({Allow: false, Profiles: [new FeeProfile({Name: "Master", Enabled: true, AllowChange: true, Fee: 50, Rake: new PerPlayerRake([0]), Chips: 3000, Points: 0, BountyChipCost: 0})], DefIndex: 0, LastRound: 6, MaxPerPlayer: 1, MaxTotal: 9999, MinPlayers: 0}), Rebuys: new BuyConfig({Allow: true, Profiles: [new FeeProfile({Name: "Double", Enabled: true, AllowChange: true, Fee: 500, Rake: new PerPlayerRake([0]), Chips: 25000, Points: 0, BountyChipCost: 0})], DefIndex: 0, LastRound: 6, MaxPerPlayer: 1, MaxTotal: 20, MinPlayers: 0}), FixedRake: new FixedRakeConfig({Type: 0, Real: new PerPlayerRake([0]), Percent: new PerPlayerRake([0]), Round: 0, RoundToNearest: 1}), HouseContribution: 0, GuaranteedPot: 0, TotalChipsAdjustment: 0, PointsForHit: 0, PointsForPlaying: new UserFormula({Text: "assign (\"points\", 0)\nassign (\"T33\", Round(n/3) )\nassign (\"T80\", Floor(n*0.9) )\nassign (\"monies\", totalBuyInsAmount + totalRebuysAmount + totalAddOnsAmount)\nassign (\"avgBC\", monies/buyins)\nassign (\"temp\", 10*(sqrt(n)/sqrt( (T33 + 1) ))*(1+log(avgBC+0.25))+ (numberofHits * 10))\nIF (T80 > r and T33 < r, assign(\"points\", round(temp * pow(0.66, (r-T33) ))), (IF (T33 >= r, assign (\"points\", (round(10*(sqrt(n)/sqrt(r))*(1+log(avgBC+0.25)))+(numberofHits * 10))))))", Strict: false}), UseBounties: false, RestrictedBounty: true, AllowInTourneyRebuys: true, AllowRebuyOverrideAfterBustout: false}), Players: new GamePlayers({Players: new Map({"52728a20-23d2-11e4-0aa0-72e776477640": new GamePlayer({ UUID: "52728a20-23d2-11e4-0aa0-72e776477640", Name: new PlayerName({UUID: "52728a20-23d2-11e4-0aa0-72e776477640", Nickname: "Hank", Firstname: "", Lastname: "", LastModified: 1408034696130}), Info: new PlayerInfo({UUID: "52728a20-23d2-11e4-0aa0-72e776477640", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1408034696130, OptID: ""}), Buyins: [new GameBuyin({Time: 1563022085899, Round: 1, Amount: 520, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 25000, Points: 0, ProfileName: "ORF 500kr 25000chips", Seat: new GameSeat({TableName: "Table 2", SeatIndex: 1, TableUUID: "7ed35b73-a639-4cd9-9878-14d6f8983f2d"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 1, PaidInFull: true, HitsAdjustment: 0 }), "4c9a9200-31ca-11e3-0aa0-fbbb035ff00c": new GamePlayer({ UUID: "4c9a9200-31ca-11e3-0aa0-fbbb035ff00c", Name: new PlayerName({UUID: "4c9a9200-31ca-11e3-0aa0-fbbb035ff00c", Nickname: "John", Firstname: "", Lastname: "", LastModified: 1381423068960}), Info: new PlayerInfo({UUID: "4c9a9200-31ca-11e3-0aa0-fbbb035ff00c", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1381423068960, OptID: ""}), Buyins: [new GameBuyin({Time: 1563020713607, Round: 1, Amount: 520, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 25000, Points: 0, ProfileName: "ORF 500kr 25000chips"})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 1, PaidInFull: true, HitsAdjustment: 0 }), "0d62619e-ae0f-4a14-9e8a-6e1fbe800226": new GamePlayer({ UUID: "0d62619e-ae0f-4a14-9e8a-6e1fbe800226", Name: new PlayerName({UUID: "0d62619e-ae0f-4a14-9e8a-6e1fbe800226", Nickname: "Jonas J", Firstname: "", Lastname: "", LastModified: 1547746855223}), Info: new PlayerInfo({UUID: "0d62619e-ae0f-4a14-9e8a-6e1fbe800226", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1547746855223, OptID: ""}), Buyins: [new GameBuyin({Time: 1563022085899, Round: 1, Amount: 520, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 25000, Points: 0, BustOut: new GameBustOut({Time: 1563048050000, Round: 12, HitmanUUID: ["52728a20-23d2-11e4-0aa0-72e776477640"], Seat: new GameSeat({TableName: "Table 2", SeatIndex: 1, Locked: false, TableUUID: "7ed35b73-a639-4cd9-9878-14d6f8983f2d"})}), ProfileName: "ORF 500kr 25000chips", Seat: new GameSeat({TableName: "Table 2", SeatIndex: 0, TableUUID: "7ed35b73-a639-4cd9-9878-14d6f8983f2d"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 0, PaidInFull: true, HitsAdjustment: 0 }), "6ee720f0-9b43-11e0-0aa0-b1603397b780": new GamePlayer({ UUID: "6ee720f0-9b43-11e0-0aa0-b1603397b780", Name: new PlayerName({UUID: "6ee720f0-9b43-11e0-0aa0-b1603397b780", Nickname: "Bosse", Firstname: "", Lastname: "", LastModified: 1308577613216}), Info: new PlayerInfo({UUID: "6ee720f0-9b43-11e0-0aa0-b1603397b780", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1308577613216, OptID: ""}), Buyins: [new GameBuyin({Time: 1563022085899, Round: 1, Amount: 520, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 25000, Points: 0, ProfileName: "ORF 500kr 25000chips", Seat: new GameSeat({TableName: "Table 2", SeatIndex: 5, TableUUID: "7ed35b73-a639-4cd9-9878-14d6f8983f2d"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 1, PaidInFull: true, HitsAdjustment: 0 }), "b6ccc810-26ca-11e3-0aa0-a708768889a0": new GamePlayer({ UUID: "b6ccc810-26ca-11e3-0aa0-a708768889a0", Name: new PlayerName({UUID: "b6ccc810-26ca-11e3-0aa0-a708768889a0", Nickname: "Planting", Firstname: "", Lastname: "", LastModified: 1380213784337}), Info: new PlayerInfo({UUID: "b6ccc810-26ca-11e3-0aa0-a708768889a0", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1380213784337, OptID: ""}), Buyins: [new GameBuyin({Time: 1563021959069, Round: 1, Amount: 520, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 25000, Points: 0, ProfileName: "ORF 500kr 25000chips", Seat: new GameSeat({TableName: "Table 1", SeatIndex: 1, Locked: false, TableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 1, PaidInFull: true, HitsAdjustment: 0 }), "d808eed0-d073-11e7-39ca-db13413f82d6": new GamePlayer({ UUID: "d808eed0-d073-11e7-39ca-db13413f82d6", Name: new PlayerName({UUID: "d808eed0-d073-11e7-39ca-db13413f82d6", Nickname: "Daniel N", Firstname: "", Lastname: "", LastModified: 1511458175091}), Info: new PlayerInfo({UUID: "d808eed0-d073-11e7-39ca-db13413f82d6", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1511458175091, OptID: ""}), Buyins: [new GameBuyin({Time: 1563022371421, Round: 1, Amount: 520, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 25000, Points: 0, BustOut: new GameBustOut({Time: 1563048732000, Round: 12, HitmanUUID: ["b6ccc810-26ca-11e3-0aa0-a708768889a0"], Seat: new GameSeat({TableName: "Table 1", SeatIndex: 1, Locked: false, TableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6"})}), ProfileName: "ORF 500kr 25000chips", Seat: new GameSeat({TableName: "Table 2", SeatIndex: 5, TableUUID: "7ed35b73-a639-4cd9-9878-14d6f8983f2d"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 2, PaidInFull: true, HitsAdjustment: 0 }), "a47c84c0-26ca-11e3-0aa0-3d0f9b6e704c": new GamePlayer({ UUID: "a47c84c0-26ca-11e3-0aa0-3d0f9b6e704c", Name: new PlayerName({UUID: "a47c84c0-26ca-11e3-0aa0-3d0f9b6e704c", Nickname: "Erik S", Firstname: "", Lastname: "", LastModified: 1380213753612}), Info: new PlayerInfo({UUID: "a47c84c0-26ca-11e3-0aa0-3d0f9b6e704c", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1380213753622, OptID: ""}), Buyins: [new GameBuyin({Time: 1563022085899, Round: 1, Amount: 520, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 25000, Points: 0, BustOut: new GameBustOut({Time: 1563049219000, Round: 12, HitmanUUID: ["52728a20-23d2-11e4-0aa0-72e776477640"], Seat: new GameSeat({TableName: "Table 1", SeatIndex: 0, Locked: false, TableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6"})}), ProfileName: "ORF 500kr 25000chips", Seat: new GameSeat({TableName: "Table 2", SeatIndex: 3, TableUUID: "7ed35b73-a639-4cd9-9878-14d6f8983f2d"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 1, PaidInFull: true, HitsAdjustment: 0 }), "fb215910-1bc9-11e3-0aa0-3da155a470e0": new GamePlayer({ UUID: "fb215910-1bc9-11e3-0aa0-3da155a470e0", Name: new PlayerName({UUID: "fb215910-1bc9-11e3-0aa0-3da155a470e0", Nickname: "Hans KH", Firstname: "", Lastname: "", LastModified: 1379004006689}), Info: new PlayerInfo({UUID: "fb215910-1bc9-11e3-0aa0-3da155a470e0", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1379004006689, OptID: ""}), Buyins: [new GameBuyin({Time: 1563022085899, Round: 1, Amount: 520, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 25000, Points: 0, BustOut: new GameBustOut({Time: 1563042033000, Round: 9, HitmanUUID: ["06806b70-1bca-11e3-0aa0-96a89b52a01d"], Seat: new GameSeat({TableName: "Table 1", SeatIndex: 0, Locked: false, TableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6"})}), ProfileName: "ORF 500kr 25000chips", Seat: new GameSeat({TableName: "Table 1", SeatIndex: 5, Locked: false, TableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 0, PaidInFull: true, HitsAdjustment: 0 }), "3f5282d0-e9d7-11e4-39ca-9b2daa7dc64f": new GamePlayer({ UUID: "3f5282d0-e9d7-11e4-39ca-9b2daa7dc64f", Name: new PlayerName({UUID: "3f5282d0-e9d7-11e4-39ca-9b2daa7dc64f", Nickname: "Marcus H", Firstname: "", Lastname: "", LastModified: 1429807148793}), Info: new PlayerInfo({UUID: "3f5282d0-e9d7-11e4-39ca-9b2daa7dc64f", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1429807148793, OptID: ""}), Buyins: [new GameBuyin({Time: 1563022085899, Round: 1, Amount: 520, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 25000, Points: 0, BustOut: new GameBustOut({Time: 1563042775000, Round: 9, HitmanUUID: ["6ee720f0-9b43-11e0-0aa0-b1603397b780"], Seat: new GameSeat({TableName: "Table 1", SeatIndex: 4, Locked: false, TableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6"})}), ProfileName: "ORF 500kr 25000chips", Seat: new GameSeat({TableName: "Table 2", SeatIndex: 4, TableUUID: "7ed35b73-a639-4cd9-9878-14d6f8983f2d"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 0, PaidInFull: true, HitsAdjustment: 0 }), "06806b70-1bca-11e3-0aa0-96a89b52a01d": new GamePlayer({ UUID: "06806b70-1bca-11e3-0aa0-96a89b52a01d", Name: new PlayerName({UUID: "06806b70-1bca-11e3-0aa0-96a89b52a01d", Nickname: "Peter S", Firstname: "", Lastname: "", LastModified: 1379004025767}), Info: new PlayerInfo({UUID: "06806b70-1bca-11e3-0aa0-96a89b52a01d", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1379004025767, OptID: ""}), Buyins: [new GameBuyin({Time: 1563022085899, Round: 1, Amount: 520, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 25000, Points: 0, ProfileName: "ORF 500kr 25000chips", Seat: new GameSeat({TableName: "Table 1", SeatIndex: 1, Locked: false, TableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 1, PaidInFull: true, HitsAdjustment: 0 })}), Chops: new GameChops({Chops: []}), Config: new GamePlayersConfig({TrackPlayers: true, NumberOfEntries: 0, NumberOfPlayers: 0, NumberOfRebuys: 0, NumberOfAddOns: 0, FullCreditHit: true})}), Levels: new GameLevels({Levels: [new GameRound({Minutes: 30, SmallBlind: 25, BigBlind: 50, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 50, BigBlind: 100, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 5, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: false, Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 75, BigBlind: 150, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 100, BigBlind: 200, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 5, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: false, Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 100, BigBlind: 200, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 150, BigBlind: 300, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 60, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: true, Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 200, BigBlind: 400, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 300, BigBlind: 600, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 5, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: true, Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 400, BigBlind: 800, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 500, BigBlind: 1000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 5, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: true, Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 700, BigBlind: 1400, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 1000, BigBlind: 2000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 20, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: true, Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 1500, BigBlind: 3000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 2000, BigBlind: 4000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 5, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: true, Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 3000, BigBlind: 6000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 5000, BigBlind: 10000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 5, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: false, Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 8000, BigBlind: 16000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 12000, BigBlind: 24000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 5, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: false, Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 16000, BigBlind: 32000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 20000, BigBlind: 40000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 5, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: true, Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 25000, BigBlind: 50000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 30, SmallBlind: 30000, BigBlind: 60000, Ante: 0, GameType: 2, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""})]}), Prizes: new GamePrizes({Prizes: [new GamePrize({Description: "1st Place", Type: 0, Recipient: 1, AmountType: 0, Amount: 50, Adjustment: 0, ShareRemainder: true, Points: 0, AwardedToPlayers: [], SharedRemainder: 0, CalculatedAmount: 2500, CalculatedPoints: 0, EstimatedAmount: 4500, EstimatedSharedRemainder: 0, Display: true, Lock: false}), new GamePrize({Description: "2nd Place", Type: 0, Recipient: 2, AmountType: 0, Amount: 30, Adjustment: 0, ShareRemainder: false, Points: 0, AwardedToPlayers: [], SharedRemainder: 0, CalculatedAmount: 1500, CalculatedPoints: 0, EstimatedAmount: 2700, EstimatedSharedRemainder: 0, Display: true, Lock: false}), new GamePrize({Description: "3rd Place", Type: 0, Recipient: 3, AmountType: 0, Amount: 20, Adjustment: 0, ShareRemainder: false, Points: 0, AwardedToPlayers: [], SharedRemainder: 0, CalculatedAmount: 1000, CalculatedPoints: 0, EstimatedAmount: 1800, EstimatedSharedRemainder: 0, Display: true, Lock: false})], RoundPrizes: 2, RoundToNearest: 100, EstimatedPotInfo: new EstimatedPotData({UseEstimatedPot: false, EstimatedPot: 9000, CalculateEstimatedPot: false, NumberOfBuyins: 10, NumberOfRebuys: 1, NumberOfAddOns: 10, CalculatedPot: 9000, ShowEstimatedPot: false}), Automatic: true, AutomaticAtTop: true}), Chips: new GameChips({Chips: [new GameChip({ChipID: 1, Label: "Blue", Color: "blue", Value: 25, Use: true, PerPlayer: 16}), new GameChip({ChipID: 2, Label: "Green", Color: "#00ff00", Value: 100, Use: true, PerPlayer: 16}), new GameChip({ChipID: 3, Label: "White", Color: "#ffffff", Value: 500, Use: true, PerPlayer: 16}), new GameChip({ChipID: 4, Label: "Black", Color: "#000000", Value: 1000, Use: true, PerPlayer: 15}), new GameChip({ChipID: 5, Label: "Red", Color: "red", Value: 5000, Use: true, PerPlayer: 0})], ChipSets: [new ChipSet({Name: "ORF 25k", ChipCounts: new Map({"1": 16, "2": 16, "3": 16, "4": 15, "5": 0})})], EstimatedBuyins: 0, EstimatedRebuys: 0, EstimatedAddOns: 0}), Tables: new GameTables({AutoSuggestMovements: true, MaxPlayerDisparity: 1, Tables: [new GameTable({Name: "Table 1", NumberOfSeats: 7, Seats: [null, null, "6ee720f0-9b43-11e0-0aa0-b1603397b780", "06806b70-1bca-11e3-0aa0-96a89b52a01d", "4c9a9200-31ca-11e3-0aa0-fbbb035ff00c", "52728a20-23d2-11e4-0aa0-72e776477640", "b6ccc810-26ca-11e3-0aa0-a708768889a0"], Locks: [false, false, false, false, false, false, false], DealerButtonSeat: 0, UUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6"}), new GameTable({Name: "Table 2", NumberOfSeats: 7, Seats: [null, null, null, null, null, null, null], Locks: [false, false, false, false, null, false, null], DealerButtonSeat: 0, UUID: "7ed35b73-a639-4cd9-9878-14d6f8983f2d"})], BalanceAlgorithm: 0, RandomizeFinalTable: true, LastPlayerMove: new PlayerMovement({Time: 1563048335644, Moves: [new Move({PlayerUUID: "a47c84c0-26ca-11e3-0aa0-3d0f9b6e704c", OldTableUUID: "7ed35b73-a639-4cd9-9878-14d6f8983f2d", OldSeatIndex: 3, NewTableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6", NewSeatIndex: 0}), new Move({PlayerUUID: "d808eed0-d073-11e7-39ca-db13413f82d6", OldTableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6", OldSeatIndex: 0, NewTableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6", NewSeatIndex: 1}), new Move({PlayerUUID: "6ee720f0-9b43-11e0-0aa0-b1603397b780", OldTableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6", OldSeatIndex: 3, NewTableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6", NewSeatIndex: 2}), new Move({PlayerUUID: "06806b70-1bca-11e3-0aa0-96a89b52a01d", OldTableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6", OldSeatIndex: 1, NewTableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6", NewSeatIndex: 3}), new Move({PlayerUUID: "4c9a9200-31ca-11e3-0aa0-fbbb035ff00c", OldTableUUID: "7ed35b73-a639-4cd9-9878-14d6f8983f2d", OldSeatIndex: 2, NewTableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6", NewSeatIndex: 4}), new Move({PlayerUUID: "52728a20-23d2-11e4-0aa0-72e776477640", OldTableUUID: "7ed35b73-a639-4cd9-9878-14d6f8983f2d", OldSeatIndex: 0, NewTableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6", NewSeatIndex: 5}), new Move({PlayerUUID: "b6ccc810-26ca-11e3-0aa0-a708768889a0", OldTableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6", OldSeatIndex: 2, NewTableUUID: "87ded7ef-81a2-4210-8fe8-1c9b0e3225b6", NewSeatIndex: 6})]}), UnavailableSeats: new Map({}), CollapseFirstTables: [], CollapseLastTables: [], CollapseFirstInOrder: false, CollapseLastInOrder: false, SeatPlayersCloseToHome: false, CanSeatUnpaidPlayers: false, AutoAcceptMovementSuggestions: false}), History: new GameHistory({History: [new GameHistoryItem({Time: 1563020660129, Text: "John bought-in (Fee: 500.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563020668850, Text: "Undo buy-in for John (Fee: 500.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563020713607, Text: "John bought-in (Fee: 520.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563021959069, Text: "Planting bought-in (Fee: 520.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563022085915, Text: "Bosse bought-in (Fee: 520.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563022085915, Text: "Erik S bought-in (Fee: 520.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563022085915, Text: "Hank bought-in (Fee: 520.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563022085915, Text: "Hans KH bought-in (Fee: 520.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563022085915, Text: "Jonas J bought-in (Fee: 520.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563022085930, Text: "Marcus H bought-in (Fee: 520.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563022085930, Text: "Peter S bought-in (Fee: 520.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563022371424, Text: "Daniel N bought-in (Fee: 520.00, Rake: 20.00, Chips: 25,000, Points: 0.00, Profile: ORF 500kr 25000chips)", Source: 0}), new GameHistoryItem({Time: 1563022662359, Text: "Tournament started", Source: 0}), new GameHistoryItem({Time: 1563022662359, Text: "Table 1, Seat 1: Hans KH", Source: 0}), new GameHistoryItem({Time: 1563022662360, Text: "Table 1, Seat 2: Peter S", Source: 0}), new GameHistoryItem({Time: 1563022662361, Text: "Table 1, Seat 3: Planting", Source: 0}), new GameHistoryItem({Time: 1563022662362, Text: "Table 1, Seat 4: Bosse", Source: 0}), new GameHistoryItem({Time: 1563022662363, Text: "Table 1, Seat 5: Marcus H", Source: 0}), new GameHistoryItem({Time: 1563022662364, Text: "Table 2, Seat 1: Hank", Source: 0}), new GameHistoryItem({Time: 1563022662365, Text: "Table 2, Seat 2: Jonas J", Source: 0}), new GameHistoryItem({Time: 1563022662366, Text: "Table 2, Seat 3: John", Source: 0}), new GameHistoryItem({Time: 1563022662367, Text: "Table 2, Seat 4: Erik S", Source: 0}), new GameHistoryItem({Time: 1563022662368, Text: "Table 2, Seat 6: Daniel N", Source: 0}), new GameHistoryItem({Time: 1563024462576, Text: "End of round 1", Source: 0}), new GameHistoryItem({Time: 1563024467620, Text: "Start of round 2", Source: 0}), new GameHistoryItem({Time: 1563026267726, Text: "End of round 2", Source: 0}), new GameHistoryItem({Time: 1563026272769, Text: "Start of break 1", Source: 0}), new GameHistoryItem({Time: 1563026572902, Text: "End of break 1", Source: 0}), new GameHistoryItem({Time: 1563026802531, Text: "Start of round 3", Source: 0}), new GameHistoryItem({Time: 1563028655511, Text: "End of round 3", Source: 0}), new GameHistoryItem({Time: 1563028660571, Text: "Start of round 4", Source: 0}), new GameHistoryItem({Time: 1563030460568, Text: "End of round 4", Source: 0}), new GameHistoryItem({Time: 1563030465624, Text: "Start of break 2", Source: 0}), new GameHistoryItem({Time: 1563030765765, Text: "End of break 2", Source: 0}), new GameHistoryItem({Time: 1563031154580, Text: "Start of round 5", Source: 0}), new GameHistoryItem({Time: 1563032954523, Text: "End of round 5", Source: 0}), new GameHistoryItem({Time: 1563032959553, Text: "Start of round 6", Source: 0}), new GameHistoryItem({Time: 1563034759624, Text: "End of round 6", Source: 0}), new GameHistoryItem({Time: 1563034764671, Text: "Start of break 3", Source: 0}), new GameHistoryItem({Time: 1563037402836, Text: "User initiated next round", Source: 0}), new GameHistoryItem({Time: 1563037402836, Text: "Start of round 7", Source: 0}), new GameHistoryItem({Time: 1563039210597, Text: "End of round 7", Source: 0}), new GameHistoryItem({Time: 1563039215629, Text: "Start of round 8", Source: 0}), new GameHistoryItem({Time: 1563041015798, Text: "End of round 8", Source: 0}), new GameHistoryItem({Time: 1563041020848, Text: "Start of break 4", Source: 0}), new GameHistoryItem({Time: 1563041320893, Text: "End of break 4", Source: 0}), new GameHistoryItem({Time: 1563041410145, Text: "User initiated next round", Source: 0}), new GameHistoryItem({Time: 1563041410165, Text: "Start of round 9", Source: 0}), new GameHistoryItem({Time: 1563042033579, Text: "Hans KH busted out of the tournament (Table 1, Seat 1) by Peter S (Table 1, Seat 2)", Source: 0}), new GameHistoryItem({Time: 1563042775346, Text: "Marcus H busted out of the tournament (Table 1, Seat 5) by Bosse (Table 1, Seat 4)", Source: 0}), new GameHistoryItem({Time: 1563043256641, Text: "End of round 9", Source: 0}), new GameHistoryItem({Time: 1563043261717, Text: "Start of round 10", Source: 0}), new GameHistoryItem({Time: 1563045061588, Text: "End of round 10", Source: 0}), new GameHistoryItem({Time: 1563045066618, Text: "Start of break 5", Source: 0}), new GameHistoryItem({Time: 1563045366989, Text: "End of break 5", Source: 0}), new GameHistoryItem({Time: 1563045489950, Text: "Start of round 11", Source: 0}), new GameHistoryItem({Time: 1563047289906, Text: "End of round 11", Source: 0}), new GameHistoryItem({Time: 1563047294966, Text: "Start of round 12", Source: 0}), new GameHistoryItem({Time: 1563048050248, Text: "Jonas J busted out of the tournament (Table 2, Seat 2) by Hank (Table 2, Seat 1)", Source: 0}), new GameHistoryItem({Time: 1563048732605, Text: "Daniel N busted out of the tournament (Table 1, Seat 2) by Planting (Table 1, Seat 7)", Source: 0}), new GameHistoryItem({Time: 1563049219640, Text: "Erik S busted out of the tournament (Table 1, Seat 1) by Hank (Table 1, Seat 6)", Source: 0}), new GameHistoryItem({Time: 1563049385858, Text: "End of round 12", Source: 0}), new GameHistoryItem({Time: 1563049390918, Text: "Start of break 6", Source: 0}), new GameHistoryItem({Time: 1563049790442, Text: "User initiated next round", Source: 0}), new GameHistoryItem({Time: 1563049790462, Text: "Start of round 13", Source: 0})]}), StartTime: 1563022662359, CurrentPeriodDuration: 1800, AccumulatedSeconds: 923, ClockRunning: false, Countdown: 0, CountdownSeconds: 60, CountdownTime: 0, CurrentLevel: 18, Events: new GameEvents({Sounds: [new Sound({Name: "About to Commence", Path: "sounds\\About to Commence.wav"}), new Sound({Name: "About to Commence Long", Path: "sounds\\About to Commence Long.wav"}), new Sound({Name: "Announce Start!", Path: "sounds\\Shuffle up and Deal.wav"}), new Sound({Name: "About to Re-commence", Path: "sounds\\About to Re-commence.wav"}), new Sound({Name: "About to Re-commence Long", Path: "sounds\\About to Re-commence Long.wav"}), new Sound({Name: "Announce Re-Commence!", Path: "sounds\\Re-commence Shuffle up and Deal.wav"}), new Sound({Name: "Entries Open", Path: "sounds\\Registration Now Open.wav"}), new Sound({Name: "Entries 5 Mins", Path: "sounds\\Registration Closing in 5mins.wav"}), new Sound({Name: "Buy-Ins 10 Mins", Path: "sounds\\End of Buy-Ins 10mins.wav"}), new Sound({Name: "English Phones", Path: "sounds\\English Only No Mobile Phones.wav"}), new Sound({Name: "No Limit", Path: "sounds\\No Limit.wav"}), new Sound({Name: "Pot Limit", Path: "sounds\\Pot Limit.wav"}), new Sound({Name: "No Smoking", Path: "sounds\\No Smoking.wav"}), new Sound({Name: "Short Break", Path: "sounds\\Start of Breaks.wav"}), new Sound({Name: "Short Break Soft", Path: "sounds\\Short Break Soft.wav"}), new Sound({Name: "Tourn Complete", Path: "sounds\\End of Tournament.wav"}), new Sound({Name: "Ante 2 Mins", Path: "sounds\\Ante Increase 2 Minutes.wav"}), new Sound({Name: "Blinds 2 Mins", Path: "sounds\\Blinds Increase 2 Mins.wav"}), new Sound({Name: "Last 3 Hands 2 Mins", Path: "sounds\\Last 3 Hands in 2 Minutes.wav"}), new Sound({Name: "Last 3 Hands Short", Path: "sounds\\Last 3 Hands Buy-ins Short.wav"}), new Sound({Name: "Last 3 Hands!", Path: "sounds\\Last 3 Hands Buy-ins.wav"}), new Sound({Name: "25", Path: "sounds\\25.wav"}), new Sound({Name: "25 - 25", Path: "<datastore>\\sounds\\25-25.wav"}), new Sound({Name: "25-25", Path: "sounds\\25-25.wav"}), new Sound({Name: "25 - 50", Path: "sounds\\25 - 50.wav"}), new Sound({Name: "A25", Path: "sounds\\A25.wav"}), new Sound({Name: "50", Path: "sounds\\50.wav"}), new Sound({Name: "50 - 100", Path: "sounds\\50 - 100.wav"}), new Sound({Name: "50 - 50", Path: "<datastore>\\sounds\\50.wav"}), new Sound({Name: "A50", Path: "sounds\\A50.wav"}), new Sound({Name: "75 - 150", Path: "sounds\\75 - 150.wav"}), new Sound({Name: "A75", Path: "sounds\\A75.wav"}), new Sound({Name: "100 - 100", Path: "sounds\\100 - 100.wav"}), new Sound({Name: "100 - 200", Path: "sounds\\100 - 200.wav"}), new Sound({Name: "A100", Path: "sounds\\A100.wav"}), new Sound({Name: "150 - 300", Path: "sounds\\150 - 300.wav"}), new Sound({Name: "A150", Path: "sounds\\A150.wav"}), new Sound({Name: "200 - 200", Path: "sounds\\200 - 200.wav"}), new Sound({Name: "200 - 400", Path: "sounds\\200 - 400.wav"}), new Sound({Name: "A200", Path: "sounds\\A200.wav"}), new Sound({Name: "250 - 500", Path: "sounds\\250 - 500.wav"}), new Sound({Name: "300 - 600", Path: "sounds\\300 - 600.wav"}), new Sound({Name: "A300", Path: "sounds\\A300.wav"}), new Sound({Name: "400 - 400", Path: "sounds\\400 - 400.wav"}), new Sound({Name: "400 - 800", Path: "sounds\\400 - 800.wav"}), new Sound({Name: "A400", Path: "sounds\\A400.wav"}), new Sound({Name: "500 - 1,000", Path: "sounds\\500 - 1,000.wav"}), new Sound({Name: "500 - 1000", Path: "<datastore>\\sounds\\500 - 1,000.wav"}), new Sound({Name: "A500", Path: "sounds\\A500.wav"}), new Sound({Name: "600 - 1,200", Path: "sounds\\600 - 1,200.wav"}), new Sound({Name: "600 - 1200", Path: "<datastore>\\sounds\\600 - 1,200.wav"}), new Sound({Name: "600 - 600", Path: "sounds\\600 - 600.wav"}), new Sound({Name: "A600", Path: "sounds\\A600.wav"}), new Sound({Name: "800 - 1,600", Path: "sounds\\800 - 1,600.wav"}), new Sound({Name: "800 - 1600", Path: "<datastore>\\sounds\\800 - 1,600.wav"}), new Sound({Name: "800 - 800", Path: "sounds\\800 - 800.wav"}), new Sound({Name: "A800", Path: "sounds\\A800.wav"}), new Sound({Name: "1,000 - 1,000", Path: "<datastore>\\sounds\\1000 - 1000.wav"}), new Sound({Name: "1,000 - 2,000", Path: "<datastore>\\sounds\\1000 - 2000.wav"}), new Sound({Name: "1000 - 1000", Path: "sounds\\1000 - 1000.wav"}), new Sound({Name: "1000 - 2000", Path: "sounds\\1000 - 2000.wav"}), new Sound({Name: "A1000", Path: "sounds\\A1000.wav"}), new Sound({Name: "1,500", Path: "<datastore>\\sounds\\1500 - 1500.wav"}), new Sound({Name: "1,500 - 1,500", Path: "<datastore>\\sounds\\1500 - 1500.wav"}), new Sound({Name: "1,500 - 3,000", Path: "<datastore>\\sounds\\1500 - 3000.wav"}), new Sound({Name: "1500", Path: "<datastore>\\sounds\\1500 - 1500.wav"}), new Sound({Name: "1500 - 1500", Path: "sounds\\1500 - 1500.wav"}), new Sound({Name: "1500 - 3000", Path: "sounds\\1500 - 3000.wav"}), new Sound({Name: "A1500", Path: "sounds\\A1500.wav"}), new Sound({Name: "2,000 - 2,000", Path: "<datastore>\\sounds\\2000 - 2000.wav"}), new Sound({Name: "2,000 - 4,000", Path: "<datastore>\\sounds\\2000 - 4000.wav"}), new Sound({Name: "2000 - 2000", Path: "sounds\\2000 - 2000.wav"}), new Sound({Name: "2000 - 4000", Path: "sounds\\2000 - 4000.wav"}), new Sound({Name: "A2000", Path: "sounds\\A2000.wav"}), new Sound({Name: "3,000 - 3,000", Path: "<datastore>\\sounds\\3000 - 3000.wav"}), new Sound({Name: "3,000 - 6,000", Path: "<datastore>\\sounds\\3000 - 6000.wav"}), new Sound({Name: "3000 - 3000", Path: "sounds\\3000 - 3000.wav"}), new Sound({Name: "3000 - 6000", Path: "sounds\\3000 - 6000.wav"}), new Sound({Name: "A3000", Path: "sounds\\A3000.wav"}), new Sound({Name: "4,000 - 4,000", Path: "<datastore>\\sounds\\4000 - 4000.wav"}), new Sound({Name: "4,000 - 8,000", Path: "<datastore>\\sounds\\4000 - 8000.wav"}), new Sound({Name: "4000 - 4000", Path: "sounds\\4000 - 4000.wav"}), new Sound({Name: "4000 - 8000", Path: "sounds\\4000 - 8000.wav"}), new Sound({Name: "A4000", Path: "sounds\\A4000.wav"}), new Sound({Name: "5,000 - 10,000", Path: "<datastore>\\sounds\\5000 - 10000.wav"}), new Sound({Name: "5000 - 10000", Path: "sounds\\5000 - 10000.wav"}), new Sound({Name: "A5000", Path: "sounds\\A5000.wav"}), new Sound({Name: "6,000 - 12,000", Path: "<datastore>\\sounds\\6000 - 12000.wav"}), new Sound({Name: "6,000 - 6,000", Path: "<datastore>\\sounds\\6000 - 6000.wav"}), new Sound({Name: "6000 - 12000", Path: "sounds\\6000 - 12000.wav"}), new Sound({Name: "6000 - 6000", Path: "sounds\\6000 - 6000.wav"}), new Sound({Name: "7,000 - 15,000", Path: "sounds\\7,000 - 15,000.wav"}), new Sound({Name: "8,000 - 8,000", Path: "<datastore>\\sounds\\8000 - 8000.wav"}), new Sound({Name: "8000 - 8000", Path: "sounds\\8000 - 8000.wav"}), new Sound({Name: "10,000 - 10,000", Path: "<datastore>\\sounds\\10000 - 10000.wav"}), new Sound({Name: "10000 - 10000", Path: "sounds\\10000 - 10000.wav"})], Events: [new GameEvent({Description: "Start of Breaks", Trigger: 5, Conditions: new UserFormula({Text: "(not isRound) and(state = 2)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "Short Break"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "end of breaks", Trigger: 0, Conditions: new UserFormula({Text: "(not isRound) and (secondsLeft = 0) and (state = 2)", Strict: false}), Actions: [new GameEventAction({Type: 2, Data: new DO({})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "2 Minutes until next increase", Trigger: 0, Conditions: new UserFormula({Text: "(isRound) and (state = 2) and (secondsLeft = 122) and (nextIsRound = 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "Blinds 2 Mins"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds Up Display Pre-Level", Trigger: 0, Conditions: new UserFormula({Text: "(isRound) and (state = 2) and (secondsLeft = 30) and (nextIsRound = 1)", Strict: false}), Actions: [new GameEventAction({Type: 1, Data: new DO({Message: "<nobr> BLINDS UP", Duration: 30, PropertySet: "increase"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 25", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 25) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A25"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 50", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 50) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A50"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 75", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 75) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A75"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 100", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 100) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A100"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 150", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 150) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A150"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 200", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 200) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A200"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 300", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 300) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A300"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 400", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 400) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A400"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 500", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 500) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A500"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 600", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 600) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A600"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 800", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (ante = 800) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A800"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 1000", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 1000) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A1000"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 1500", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 1500) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A1500"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 2000", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 2000) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A2000"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 3000", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 3000) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A3000"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 4000", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 4000) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A4000"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Ante 5000", Trigger: 0, Conditions: new UserFormula({Text: "isRound and (ante = 5000) and (secondsElapsed = 6) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "A5000"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds 25-25", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 25) and (bigBlind = 25) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "25-25"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds 25-50", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 25) and (bigBlind = 50) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "25 - 50"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds 50-100", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 50) and (bigBlind = 100) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 4, Data: new DO({})}), new GameEventAction({Type: 0, Data: new DO({Sound: "50 - 100"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds 75-150", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 75) and (bigBlind = 150) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "75 - 150"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds 100-200", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 100) and (bigBlind = 200) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "100 - 200"})}), new GameEventAction({Type: 4, Data: new DO({})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds 150-300", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 150) and (bigBlind = 300) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "150 - 300"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds 200-400", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 200) and (bigBlind = 400) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "200 - 400"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "blinds 250-500", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 250) and (bigBlind = 500) and (state = 2)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "250 - 500"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds 300-600", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 300) and (bigBlind = 600) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "300 - 600"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds 400-800", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 400) and (bigBlind = 800) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "400 - 800"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds 500-1000", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 500) and (bigBlind = 1000) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "500 - 1,000"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Blinds 600-1200", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 600) and (bigBlind = 1200) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "600 - 1200"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "blinds 800-1600", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallblind = 800) and (bigblind = 1600) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "800 - 1,600"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "blinds 1000-2000", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 1000) and (bigBlind = 2000) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "1,000 - 2,000"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "blinds 1500-3000", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 1500) and (bigBlind = 3000) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "1500 - 3000"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "blinds 2000-4000", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 2000) and (bigBlind = 4000) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "2000 - 4000"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "blinds 3000-6000", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 3000) and (bigBlind = 6000) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "3,000 - 6,000"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "blinds 4000-8000", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 4000) and (bigBlind = 8000) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "4,000 - 8,000"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "blinds 5000-10000", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 5000) and (bigBlind = 10000) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "5,000 - 10,000"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "blinds 6000-12000", Trigger: 5, Conditions: new UserFormula({Text: "isRound and (smallBlind = 6000) and (bigBlind = 12000) and (state = 2) and (roundNum > 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "6000 - 12000"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Tournament about to start!", Trigger: 0, Conditions: new UserFormula({Text: "state=0\nsecondsElapsed=1", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "About to Commence"})})], Omit: true, SoundsBehavior: 2, MessagesBehavior: 2, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Short break", Trigger: 6, Conditions: new UserFormula({Text: "isBreak and (breakNum >= 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "25 - 50"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "Tournament starts!", Trigger: 0, Conditions: new UserFormula({Text: "state=0\nsecondsLeft=10", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "Announce Start!"})})], Omit: true, SoundsBehavior: 2, MessagesBehavior: 2, SoundsPriority: 0, MessagesPriority: 0})], MsgPropSets: new Map({"increase": new LO.OverlayPropSet({Font: new Font({Name: "Arial", Size: 100, Bold: true, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ff0000", BGColor: "#ffff00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), Loc: new Location2({X: "center", Y: "middle"}), Flash: true, Opacity: 100, Animation: new LO.OverlayAnimation({InFrom: "right", OutTo: "left", Duration: 0})}), "BREAKS": new LO.OverlayPropSet({Font: new Font({Name: "Arial", Size: 45, Bold: true, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#0000ff", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), Loc: new Location2({X: "center", Y: "middle"}), Flash: true, Opacity: 100, Animation: new LO.OverlayAnimation({InFrom: "right", OutTo: "left", Duration: 0})})}), DefMsgPropSet: "increase", DefMsgDuration: 7}), LastModified: 1308654270662, Rules: new GameRules({Tokens: new TokenOverrides({Tokens: new Map({"welcome": new TokenOverride({Name: "welcome", Value: "", IsFile: false, IsHTML: true}), "welcome2": new TokenOverride({Name: "welcome2", Value: "", IsFile: false, IsHTML: true}), "welcome3": new TokenOverride({Name: "welcome3", Value: "", IsFile: false, IsHTML: true}), "announcements": new TokenOverride({Name: "announcements", Value: "", IsFile: false, IsHTML: true}), "announcements2": new TokenOverride({Name: "announcements2", Value: "", IsFile: false, IsHTML: true}), "announcements3": new TokenOverride({Name: "announcements3", Value: "", IsFile: false, IsHTML: true}), "rules": new TokenOverride({Name: "rules", Value: "", IsFile: false, IsHTML: true}), "rules2": new TokenOverride({Name: "rules2", Value: "", IsFile: false, IsHTML: true}), "rules3": new TokenOverride({Name: "rules3", Value: "", IsFile: false, IsHTML: true}), "farewell": new TokenOverride({Name: "farewell", Value: "", IsFile: false, IsHTML: true}), "farewell2": new TokenOverride({Name: "farewell2", Value: "", IsFile: false, IsHTML: true}), "farewell3": new TokenOverride({Name: "farewell3", Value: "", IsFile: false, IsHTML: true})})})})}), L: { V: "3.4.3", L: new LO.Layout({ScreenBox: new LO.ScreenBox({Contents: new Map({"Main Screen": new LO.Screen({Name: "Main Screen", TopElement: new LO.Column({Elements: [new LO.CellRef({CellName: "Event Name"}), new LO.CellRef({CellName: "Description"}), new LO.CellRef({CellName: "Tournament Info"}), new LO.Row({Elements: [new LO.Column({Elements: [new LO.CellRef({CellName: "Round"}), new LO.CellRef({CellName: "Entries"}), new LO.CellRef({CellName: "Players"}), new LO.CellRef({CellName: "Rebuys"}), new LO.CellRef({CellName: "Add-ons"}), new LO.CellRef({CellName: "Chip Count"}), new LO.CellRef({CellName: "Stack"}), new LO.CellRef({CellName: "Pot"})], VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#000", Size: 0, Type: 0}), Right: new SBorder({Color: "#000", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#000", Size: 0, Type: 0}), Left: new SBorder({Color: "#000", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})})}), new LO.Column({Elements: [new LO.CellRef({CellName: "Clock"}), new LO.CellRef({CellName: "Elapsed Time"}), new LO.CellRef({CellName: "Next Break"})], VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#000", Size: 0, Type: 0}), Right: new SBorder({Color: "#000", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#000", Size: 0, Type: 0}), Left: new SBorder({Color: "#000", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})})}), new LO.Column({Elements: [new LO.CellRef({CellName: "Game"}), new LO.CellRef({CellName: "Blinds"}), new LO.CellRef({CellName: "Stakes"}), new LO.CellRef({CellName: "Ante"}), new LO.CellRef({CellName: "Next Game"}), new LO.CellRef({CellName: "Next Blinds"}), new LO.CellRef({CellName: "Next Stakes"}), new LO.CellRef({CellName: "Next Ante"}), new LO.CellRef({CellName: "Blank"})], VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#000", Size: 0, Type: 0}), Right: new SBorder({Color: "#000", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#000", Size: 0, Type: 0}), Left: new SBorder({Color: "#000", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})})})], VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#000", Size: 0, Type: 0}), Right: new SBorder({Color: "#000", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#000", Size: 0, Type: 0}), Left: new SBorder({Color: "#000", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})})}), new LO.CellRef({CellName: "Prizes"})], VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#000", Size: 0, Type: 0}), Right: new SBorder({Color: "#000", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#000", Size: 0, Type: 0}), Left: new SBorder({Color: "#000", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})})}), BGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "transparent", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Stretch: true, Type: 0, HTMLType: 1})})}), ScreenSets: new LO.ScreenSets({Sets: [new LO.ScreenSet({Name: "noname", ScreenList: [new LO.ScreenRef({Type: 0, ScreenName: "Main Screen", Duration: 600})]})]}), GlobalProps: new LO.GlobalProps({Contents: new Map({"Odd Rounds": new LO.PropSet({Name: "Odd Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 22, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Current Time</nobr><br><currenttime showSeconds=\"t\">", RotateText: false}), "Even Rounds": new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 22, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Current Time</nobr><br><currenttime showSeconds=\"t\">", RotateText: false}), "Blinds Odd Rounds": new LO.PropSet({Name: "Blinds Odd Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 60, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#fff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Blinds<br><smallblind> / <bigblind>", RotateText: false}), "Blinds Even Rounds": new LO.PropSet({Name: "Blinds Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 60, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#fff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Blinds<br><smallblind> / <bigblind>", RotateText: false}), "Blinds Breaks": new LO.PropSet({Name: "Blinds Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 60, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<breaktext>", RotateText: false}), "Next Blinds Odd Rounds": new LO.PropSet({Name: "Next Blinds Odd Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Blinds: <nextsmallblind> / <nextbigblind></nobr>", RotateText: false}), "Next Blinds Even Rounds": new LO.PropSet({Name: "Next Blinds Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Blinds: <nextsmallblind> / <nextbigblind></nobr>", RotateText: false}), "Next Blinds Breaks": new LO.PropSet({Name: "Next Blinds Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Blinds: <nextsmallblind> / <nextbigblind></nobr>", RotateText: false})})}), CellBox: new LO.CellBox({Contents: new Map({"Round": new LO.Cell({Name: "Round", Description: "Current round number", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Round<br><round>", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Round<br><round>", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Entries": new LO.Cell({Name: "Entries", Description: "Number of entries into the tournament", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Entries<br><entries>", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Entries<br><entries>", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Players": new LO.Cell({Name: "Players", Description: "Number of players remaining in the tournament", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Players In</nobr><br><players>", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Players In</nobr><br><players>", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Rebuys": new LO.Cell({Name: "Rebuys", Description: "Number of rebuys purchased", PropSets: [new LO.PropSet({Name: "Rebuys Not Allowed", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Rebuys<br><rebuys>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({RebuysAllowed: false}), Formula: new UserFormula({Text: "(!rebuysAllowed)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Rebuys<br><rebuys>", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Rebuys<br><rebuys>", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Add-ons": new LO.Cell({Name: "Add-ons", Description: "Number of add-ons purchased", PropSets: [new LO.PropSet({Name: "Add-ons not allowed", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Add-ons</nobr><br><addons>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({AddOnsAllowed: false}), Formula: new UserFormula({Text: "(!addOnsAllowed)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Add-ons</nobr><br><addons>", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Add-ons</nobr><br><addons>", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Chip Count": new LO.Cell({Name: "Chip Count", Description: "Total number of chips in play", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Chip Count</nobr><br><chipcount>", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Chip Count</nobr><br><chipcount>", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Stack": new LO.Cell({Name: "Stack", Description: "Average number of chips per player", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Avg Stack</nobr><br><stack>", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Avg Stack</nobr><br><stack>", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Pot": new LO.Cell({Name: "Pot", Description: "Amount of money in the prize pool", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Total Pot</nobr><br><pot>", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Total Pot</nobr><br><pot>", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Clock": new LO.Cell({Name: "Clock", Description: "Tournament clock", PropSets: [new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 160, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#fff", BGColor: "#800", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<clock>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "(!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 160, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#fff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<clock>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 160, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#fff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<clock>", RotateText: false})]}), "Blinds": new LO.Cell({Name: "Blinds", Description: "Blinds for the current round", PropSets: [new LO.PropSet({Name: "After Tournament, Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 60, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "GAME<br>OVER", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 3, Level: 1}), Formula: new UserFormula({Text: "(state = 3) and (!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "After Tournament, Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 60, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "GAME<br>OVER", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 3, Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "(state = 3) and isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "After Tournament, Odd Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 60, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "GAME<br>OVER", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 3, Level: 0, LevelOperator: "=", LevelModifier: "odd"}), Formula: new UserFormula({Text: "(state = 3) and isRound and (roundNum % 2 = 1)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Limit, Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 60, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<breaktext>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1, GameType: 0}), Formula: new UserFormula({Text: "(!isRound) and (gameType = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Limit, Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Blinds: <smallblind> / <bigblind></nobr>", RotateText: false, GlobalPropSetName: "Blinds Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even", GameType: 0}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0) and (gameType = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Limit, Odd Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Blinds: <smallblind> / <bigblind></nobr>", RotateText: false, GlobalPropSetName: "Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "odd", GameType: 0}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 1) and (gameType = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 60, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<breaktext>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "(!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Blinds<br><smallblind> / <bigblind>", RotateText: false, GlobalPropSetName: "Blinds Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Blinds<br><smallblind> / <bigblind>", RotateText: false, GlobalPropSetName: "Blinds Odd Rounds"})]}), "Tables": new LO.Cell({Name: "Tables", Description: "The optimal table layout for the current number of players", PropSets: [new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Tables<br><tables>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "(!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Tables<br><tables>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Tables<br><tables>", RotateText: false})]}), "Current Time": new LO.Cell({Name: "Current Time", Description: "Current time of day", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Current Time</nobr><br><currenttime showSeconds=\"t\">", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Current Time</nobr><br><currenttime showSeconds=\"t\">", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Elapsed Time": new LO.Cell({Name: "Elapsed Time", Description: "How long the tournament has been running", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Elapsed Time</nobr><br><elapsedtime>", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Elapsed Time</nobr><br><elapsedtime>", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Next Break": new LO.Cell({Name: "Next Break", Description: "Amount of time until the next break", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Next Break</nobr><br><nextbreak>", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Next Break</nobr><br><nextbreak>", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Prizes": new LO.Cell({Name: "Prizes", Description: "Prizes to be awarded (horizontally oriented)", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 2, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<prizes orient=\"horizontal\">", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 2, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<prizes orient=\"horizontal\">", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Paid Spots": new LO.Cell({Name: "Paid Spots", Description: "The number of ranked prizes awarded", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 1, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 1, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Paid Spots<br><numberofrankedprizes>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 1, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 1, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Paid Spots<br><numberofrankedprizes>", RotateText: false})]}), "Chips": new LO.Cell({Name: "Chips", Description: "Chip colors and values", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<chips size=\"60\" columns=\"1\" values=\"right\">", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<chips size=\"60\" columns=\"1\" values=\"right\">", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Stakes": new LO.Cell({Name: "Stakes", Description: "Stakes for the current round", PropSets: [new LO.PropSet({Name: "No Limit", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Stakes:<limit1> / <limit2></nobr>", RotateText: false, GlobalPropSetName: "Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({GameType: 2}), Formula: new UserFormula({Text: "(gameType = 2)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Pot Limit", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Stakes:<limit1> / <limit2></nobr>", RotateText: false, GlobalPropSetName: "Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({GameType: 1}), Formula: new UserFormula({Text: "(gameType = 1)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "After Tournament", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Stakes:<limit1> / <limit2></nobr>", RotateText: false, GlobalPropSetName: "Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 3}), Formula: new UserFormula({Text: "(state = 3)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, GlobalPropSetName: "Blinds Breaks", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "(!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Stakes:<limit1> / <limit2></nobr>", RotateText: false, GlobalPropSetName: "Blinds Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Stakes:<limit1> / <limit2></nobr>", RotateText: false, GlobalPropSetName: "Blinds Odd Rounds"})]}), "Ante": new LO.Cell({Name: "Ante", Description: "Ante for the current round", PropSets: [new LO.PropSet({Name: "No Ante", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Ante: <ante></nobr>", RotateText: false, GlobalPropSetName: "Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({NonZeroAnte: false}), Formula: new UserFormula({Text: "(ante = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "After Tournament", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Ante: <ante></nobr>", RotateText: false, GlobalPropSetName: "Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 3}), Formula: new UserFormula({Text: "(state = 3)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, GlobalPropSetName: "Blinds Breaks", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "(!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Ante: <ante></nobr>", RotateText: false, GlobalPropSetName: "Blinds Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 40, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Ante: <ante></nobr>", RotateText: false, GlobalPropSetName: "Blinds Odd Rounds"})]}), "Description": new LO.Cell({Name: "Description", Description: "Tournament description", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<description>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<description>", RotateText: false})]}), "Next Blinds": new LO.Cell({Name: "Next Blinds", Description: "Blinds for the next round", PropSets: [new LO.PropSet({Name: "After Tournament", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Blinds: <nextsmallblind> / <nextbigblind></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 3}), Formula: new UserFormula({Text: "(state = 3)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Blinds: <nextsmallblind> / <nextbigblind></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Breaks", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "(!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Blinds: <nextsmallblind> / <nextbigblind></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Blinds: <nextsmallblind> / <nextbigblind></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Odd Rounds"})]}), "Next Stakes": new LO.Cell({Name: "Next Stakes", Description: "Stakes for the next round", PropSets: [new LO.PropSet({Name: "No Limit", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Stakes: <nextlimit1> / <nextlimit2></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({NextGameType: 2}), Formula: new UserFormula({Text: "(nextGameType = 2)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Pot Limit", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Stakes: <nextlimit1> / <nextlimit2></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({NextGameType: 1}), Formula: new UserFormula({Text: "(nextGameType = 1)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "After Tournament", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Stakes: <nextlimit1> / <nextlimit2></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 3}), Formula: new UserFormula({Text: "(state = 3)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Stakes: <nextlimit1> / <nextlimit2></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Breaks", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "(!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Stakes: <nextlimit1> / <nextlimit2></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Stakes: <nextlimit1> / <nextlimit2></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Odd Rounds"})]}), "Next Ante": new LO.Cell({Name: "Next Ante", Description: "Ante for the next round", PropSets: [new LO.PropSet({Name: "No Ante", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Ante: <nextante></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({NonZeroNextAnte: false}), Formula: new UserFormula({Text: "", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "After Tournament", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Ante: <nextante></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 3}), Formula: new UserFormula({Text: "(state = 3)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Ante: <nextante></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Breaks", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "(!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Ante: <nextante></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Ante: <nextante></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Odd Rounds"})]}), "Game": new LO.Cell({Name: "Game", Description: "The card game played in the current round", PropSets: [new LO.PropSet({Name: "After Tournament", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr><gametype> <gamename></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 3}), Formula: new UserFormula({Text: "(state = 3)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "(!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr><gametype> <gamename></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr><gametype> <gamename></nobr>", RotateText: false})]}), "Next Game": new LO.Cell({Name: "Next Game", Description: "The card game played in the next round", PropSets: [new LO.PropSet({Name: "After Tournament", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 2, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Next Round: <nextgametype> <nextgamename></nobr>", RotateText: false, GlobalPropSetName: "Next Blinds Odd Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 3}), Formula: new UserFormula({Text: "(state = 3)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 2, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Next Round: <nextgametype> <nextgamename></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "(!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 2, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Next Round: <nextgametype> <nextgamename></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 25, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 2, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Next Round: <nextgametype> <nextgamename></nobr>", RotateText: false})]}), "Tournament Info": new LO.Cell({Name: "Tournament Info", Description: "Displays buyin/rebuy/add-on information", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<buyin> Buy-in, <rebuyinfo>, <addoninfo>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<buyin> Buy-in, <rebuyinfo>, <addoninfo>", RotateText: false})]}), "Seating Chart": new LO.Cell({Name: "Seating Chart", Description: "Displays the seating chart", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<seatingchart format=\"diagram\" columns=\"2\">", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<seatingchart format=\"diagram\" columns=\"2\">", RotateText: false})]}), "Start Time": new LO.Cell({Name: "Start Time", Description: "The time the tournament will begin, when in countdown", PropSets: [new LO.PropSet({Name: "Countdown, Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Tournament will start at <starttime includeSeconds=\"false\">", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 1, Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "(state = 1) and isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Countdown, Odd Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Tournament will start at <starttime includeSeconds=\"false\">", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 1, Level: 0, LevelOperator: "=", LevelModifier: "odd"}), Formula: new UserFormula({Text: "(state = 1) and isRound and (roundNum % 2 = 1)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Tournament will start at <starttime>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Tournament will start at <starttime includeSeconds=\"false\">", RotateText: false})]}), "V Prizes": new LO.Cell({Name: "V Prizes", Description: "Prizes to be awarded (vertically oriented)", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 2, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Prizes<br><prizes orient=\"vertical\">", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 2, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Prizes<br><prizes orient=\"vertical\">", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Pre-Start Clock": new LO.Cell({Name: "Pre-Start Clock", Description: "The countdown clock (until tournament start)", PropSets: [new LO.PropSet({Name: "In Countdown, Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 120, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<clock>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 1, Level: 1}), Formula: new UserFormula({Text: "(state = 1) and (!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "In Countdown, Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 120, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<clock>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 1, Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "(state = 1) and isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "In Countdown, Odd Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 120, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<clock>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Stage: 1, Level: 0, LevelOperator: "=", LevelModifier: "odd"}), Formula: new UserFormula({Text: "(state = 1) and isRound and (roundNum % 2 = 1)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: true, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 120, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<clock>", RotateText: false})]}), "Rules": new LO.Cell({Name: "Rules", Description: "Displays the <rules> message", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<rules>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 14, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "left", Vertical: "top"}), Styles: new Map({})}), Text: "<rules>", RotateText: false})]}), "Blank": new LO.Cell({Name: "Blank", Description: "An empty cell", PropSets: [new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 30, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "(!isRound)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 30, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 30, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false})]}), "Farewell": new LO.Cell({Name: "Farewell", Description: "Displays the <farewell> message", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<farewell>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 14, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 2, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 2, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "left", Vertical: "top"}), Styles: new Map({})}), Text: "<farewell>", RotateText: false})]}), "Winners": new LO.Cell({Name: "Winners", Description: "Prizes to be awarded and prize recipients", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003700", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 2, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<prizes orient=\"vertical\" showRecipients=\"true\">", RotateText: false, GlobalPropSetName: "Even Rounds", Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002448", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 2, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<prizes orient=\"vertical\" showRecipients=\"true\">", RotateText: false, GlobalPropSetName: "Odd Rounds"})]}), "Event Name": new LO.Cell({Name: "Event Name", Description: "Tournament title", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 28, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#006c00", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<eventName>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 28, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#003a75", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<eventName>", RotateText: false})]})})}), BannerSets: new LO.BannerSets({Contents: new Map({})}), OtherProps: new LO.OtherProps({Properties: new Map({"0": new LO.SeatingChartProps({SysScreenProps: new LO.SysScreenProps({HeaderFont: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#000000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), MainFont: new Font({Name: "Arial", Size: 14, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#000000", BGColor: "#ffffff", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#7288a3", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Header: "<div style=\"font-family: Arial; font-size: 36pt; font-weight: bold; color: #ffffff; filter: progid:DXImageTransform.Microsoft.DropShadow(OffX=3, OffY=3, Color=#000000); width: 100%\">Seating Chart</div>", Footer: "", Columns: ["Name", "Seat"], ColumnNames: new Map({}), UseAltBGColor: false, AltBGColor: "#dddddd", FullScreenWide: false, HideScrollbars: false, PlayerImageSize: 100, LineSpacing: 1, CenterAllColumns: false}), FormatProps: new LO.SCFormatProps({ShowEmptyTables: true, ShowDealerButton: true, Columns: 3, TableSpacingDims: new Dimension({Width: 10, Height: 20}), TableVerticalAlign: "middle", ShowPlayerImages: false}), HighlightProps: new LO.SCHighlightProps({Mode: 0, Time: 60, Font: new Font({Name: "Arial", Size: 14, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#000000", BGColor: "#8aa7ca", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})})}), TableProps: new LO.SCTableProps({Images: [], Rollover: true})}), "1": new LO.PlayerRankingsProps({SysScreenProps: new LO.SysScreenProps({HeaderFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002040", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), MainFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#004080", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Header: "<div style=\"font-family: Arial; font-size: 36pt; font-weight: bold; color: #ffffff; filter: progid:DXImageTransform.Microsoft.DropShadow(OffX=3, OffY=3, Color=#000000); width: 100%\">Player Rankings</div>", Footer: "", Columns: ["Rank", "Name", "TimeOut", "RoundOut"], ColumnNames: new Map({}), UseAltBGColor: false, AltBGColor: "#0b4075", FullScreenWide: false, HideScrollbars: false, PlayerImageSize: 100, LineSpacing: 1, CenterAllColumns: false}), ShowAllPlayers: true, OmitSeconds: false, PlayerMode: 0, SortMode: 0, SortSpec: new SortSpecifier({Columns: [{Column: "Rank", Reverse: false}, {Column: "Name", Reverse: false}, {Column: "ChipCount", Reverse: true}]})}), "2": new LO.StatusIcon({Loc: new Location({Type: 2, X: 0, Y: 0}), Color: "#fff", Opacity: 40, Size: 32}), "3": new LO.StatusIcon({Loc: new Location({Type: 2, X: 0, Y: 0}), Color: "#fff", Opacity: 40, Size: 32}), "4": new LO.StatusIcon({Loc: new Location({Type: 2, X: 0, Y: 0}), Color: "#fff", Opacity: 40, Size: 32}), "5": new LO.StatusIcon({Loc: new Location({Type: 2, X: 0, Y: 0}), Color: "#fff", Opacity: 40, Size: 32}), "6": new LO.ScheduleProps({SysScreenProps: new LO.SysScreenProps({HeaderFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#009500", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), MainFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#002f00", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Header: "<div style=\"font-family: Arial; font-size: 36pt; font-weight: bold; color: #ffffff; filter: progid:DXImageTransform.Microsoft.DropShadow(OffX=3, OffY=3, Color=#000000); width: 100%\">Blinds Schedule</div>", Footer: "", Columns: ["Level", "Duration", "SmallBlind", "BigBlind", "Ante"], ColumnNames: new Map({}), UseAltBGColor: false, AltBGColor: "#042b04", FullScreenWide: false, HideScrollbars: false, PlayerImageSize: 100, LineSpacing: 1, CenterAllColumns: false}), BreakLineFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), DurationFormat: 0, OmitPreviousLevels: false}), "7": new LO.PlayerMovementProps({SysScreenProps: new LO.SysScreenProps({HeaderFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#400000", BGColor: "#ffffff", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), MainFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#400000", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Header: "<div style=\"font-family: Arial; font-size: 36pt; font-weight: bold; color: #ffffff; filter: progid:DXImageTransform.Microsoft.DropShadow(OffX=3, OffY=3, Color=#000000); width: 100%\">Player Movement</div>", Footer: "", Columns: ["Name", "CurrentSeat", "MovingTo"], ColumnNames: new Map({}), UseAltBGColor: false, AltBGColor: "#3a0505", FullScreenWide: false, HideScrollbars: false, PlayerImageSize: 100, LineSpacing: 1, CenterAllColumns: false}), SortColumn: "Name", OmitCurrentSeat: false}), "8": new LO.HandTimerProps({MainFont: new Font({Name: "Tahoma", Size: 96, Bold: true, Italic: false, Color: "#000088", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#d4d0c8", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})})}), "9": new LO.SeatingListProps({SysScreenProps: new LO.SysScreenProps({HeaderFont: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#000000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), MainFont: new Font({Name: "Arial", Size: 14, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#000000", BGColor: "#ffffff", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#7288a3", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Header: "<div style=\"font-family: Arial; font-size: 36pt; font-weight: bold; color: #ffffff; filter: progid:DXImageTransform.Microsoft.DropShadow(OffX=3, OffY=3, Color=#000000); width: 100%\">Seating Chart</div>", Footer: "", Columns: ["Name", "Seat"], ColumnNames: new Map({}), UseAltBGColor: false, AltBGColor: "#dddddd", FullScreenWide: false, HideScrollbars: false, PlayerImageSize: 100, LineSpacing: 1, CenterAllColumns: false}), FormatProps: new LO.SLFormatProps({NumColumns: 1, SortByName: true}), HighlightProps: new LO.SCHighlightProps({Mode: 0, Time: 60, Font: new Font({Name: "Arial", Size: 14, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#000000", BGColor: "#8aa7ca", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})})})})})}), Tokens: new TokenOverrides({Tokens: new Map({})}), Settings: new LO.LayoutSettings({OptimalRes: new Dimension({Width: 1680, Height: 1050})})}) } }
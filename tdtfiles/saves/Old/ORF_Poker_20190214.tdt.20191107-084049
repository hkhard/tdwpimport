{ V: "3.4.3", T: new Tournament({UUID: "a8da0c13-5f7f-4131-852a-7a6b1048fc50", LeagueUUID: "0d8bd040-7ed4-11e3-0aa0-020a16dc9f9c", LeagueName: "ORF", SeasonUUID: "58015742-369d-4d5a-876d-3df5822e1b82", SeasonName: "2019", Title: "ORF Poker 20140227", Description: "", Notes: "\"Poker is 100% skill, 50% luck\" - Phil Hellmuth", Financials: new FinancialConfig({Buyins: new BuyConfig({Allow: true, Profiles: [new FeeProfile({Name: "Master", Enabled: true, AllowChange: true, Fee: 200, Rake: new PerPlayerRake([20]), Chips: 5000, Points: 0, BountyChipCost: 50})], DefIndex: 0, LastRound: 0, MaxPerPlayer: 0, MaxTotal: 0, MinPlayers: 0}), AddOns: new BuyConfig({Allow: false, Profiles: [new FeeProfile({Name: "Master", Enabled: true, AllowChange: true, Fee: 50, Rake: new PerPlayerRake([0]), Chips: 3000, Points: 0, BountyChipCost: 0})], DefIndex: 0, LastRound: 9999, MaxPerPlayer: 1, MaxTotal: 999, MinPlayers: 0}), Rebuys: new BuyConfig({Allow: false, Profiles: [new FeeProfile({Name: "Master", Enabled: true, AllowChange: true, Fee: 50, Rake: new PerPlayerRake([0]), Chips: 2000, Points: 0, BountyChipCost: 0})], DefIndex: 0, LastRound: 9999, MaxPerPlayer: 999, MaxTotal: 999, MinPlayers: 0}), FixedRake: new FixedRakeConfig({Type: 0, Real: new PerPlayerRake([0]), Percent: new PerPlayerRake([0]), Round: 0, RoundToNearest: 1}), HouseContribution: 0, GuaranteedPot: 0, TotalChipsAdjustment: 0, PointsForHit: 0, PointsForPlaying: new UserFormula({Text: "assign (\"points\", 0)\nassign (\"T33\", Round(n/3) )\nassign (\"T80\", Floor(n*0.9) )\nassign (\"monies\", totalBuyInsAmount + totalRebuysAmount + totalAddOnsAmount)\nassign (\"avgBC\", monies/buyins)\nassign (\"temp\", 10*(sqrt(n)/sqrt( (T33 + 1) ))*(1+log(avgBC+0.25)))\nIF (T80 > r and T33 < r, assign(\"points\", round(temp * pow(0.66, (r-T33) ))), (IF (T33 >= r, assign (\"points\", (round(10*(sqrt(n)/sqrt(r))*(1+log(avgBC+0.25))))))))\nIF (nr>0 and (points>0 and points<49),assign(\"r1points\",0 + (numberofHits * 10)))\nIF (nr>0 and points>50,assign(\"r2points\",points-50+(numberofHits * 10)),points + (numberofHits * 10))\nIF (r2points > r1points, assign (\"points\",r2points))", Strict: false}), UseBounties: false, RestrictedBounty: true, AllowInTourneyRebuys: true, AllowRebuyOverrideAfterBustout: true}), Players: new GamePlayers({Players: new Map({"f6a742a0-1bc9-11e3-0aa0-5a52f3b934ef": new GamePlayer({ UUID: "f6a742a0-1bc9-11e3-0aa0-5a52f3b934ef", Name: new PlayerName({UUID: "f6a742a0-1bc9-11e3-0aa0-5a52f3b934ef", Nickname: "Bosse", Firstname: "", Lastname: "", LastModified: 1379003999178}), Info: new PlayerInfo({UUID: "f6a742a0-1bc9-11e3-0aa0-5a52f3b934ef", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1379003999178, OptID: ""}), Buyins: [new GameBuyin({Time: 1550165391550, Round: 1, Amount: 200, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 5000, Points: 0, BustOut: new GameBustOut({Time: 1550178338000, Round: 12, HitmanUUID: ["f482b4f0-1bc9-11e3-0aa0-ed615033decd"], Seat: new GameSeat({TableName: "1", SeatIndex: 2, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})}), ProfileName: "Master", Seat: new GameSeat({TableName: "1", SeatIndex: 2, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 10000, NumberOfTableMoves: 0, PaidInFull: true, HitsAdjustment: 0 }), "a47c84c0-26ca-11e3-0aa0-3d0f9b6e704c": new GamePlayer({ UUID: "a47c84c0-26ca-11e3-0aa0-3d0f9b6e704c", Name: new PlayerName({UUID: "a47c84c0-26ca-11e3-0aa0-3d0f9b6e704c", Nickname: "Erik S", Firstname: "", Lastname: "", LastModified: 1380213753612}), Info: new PlayerInfo({UUID: "a47c84c0-26ca-11e3-0aa0-3d0f9b6e704c", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1380213753622, OptID: ""}), Buyins: [new GameBuyin({Time: 1550165391550, Round: 1, Amount: 200, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 5000, Points: 0, BustOut: new GameBustOut({Time: 1550167756000, Round: 2, HitmanUUID: ["b0b49200-26ca-11e3-0aa0-8936ce39ad49"], Seat: new GameSeat({TableName: "1", SeatIndex: 5, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})}), ProfileName: "Master", Seat: new GameSeat({TableName: "1", SeatIndex: 5, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 10000, NumberOfTableMoves: 0, PaidInFull: true, HitsAdjustment: 0 }), "fb215910-1bc9-11e3-0aa0-3da155a470e0": new GamePlayer({ UUID: "fb215910-1bc9-11e3-0aa0-3da155a470e0", Name: new PlayerName({UUID: "fb215910-1bc9-11e3-0aa0-3da155a470e0", Nickname: "Hans KH", Firstname: "", Lastname: "", LastModified: 1379004006689}), Info: new PlayerInfo({UUID: "fb215910-1bc9-11e3-0aa0-3da155a470e0", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1379004006689, OptID: ""}), Buyins: [new GameBuyin({Time: 1550165391550, Round: 1, Amount: 200, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 5000, Points: 0, BustOut: new GameBustOut({Time: 1550174931000, Round: 9, HitmanUUID: ["f482b4f0-1bc9-11e3-0aa0-ed615033decd"], Seat: new GameSeat({TableName: "1", SeatIndex: 3, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})}), ProfileName: "Master", Seat: new GameSeat({TableName: "1", SeatIndex: 3, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 10000, NumberOfTableMoves: 0, PaidInFull: true, HitsAdjustment: 0 }), "f482b4f0-1bc9-11e3-0aa0-ed615033decd": new GamePlayer({ UUID: "f482b4f0-1bc9-11e3-0aa0-ed615033decd", Name: new PlayerName({UUID: "f482b4f0-1bc9-11e3-0aa0-ed615033decd", Nickname: "Joakim H", Firstname: "", Lastname: "", LastModified: 1379003995583}), Info: new PlayerInfo({UUID: "f482b4f0-1bc9-11e3-0aa0-ed615033decd", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1379003995583, OptID: ""}), Buyins: [new GameBuyin({Time: 1550165391550, Round: 1, Amount: 200, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 5000, Points: 0, ProfileName: "Master", Seat: new GameSeat({TableName: "Table 2", SeatIndex: 1, Locked: false, TableUUID: "33329809-bd5b-4cbb-b35b-bdee9e85f8a4"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 10000, NumberOfTableMoves: 0, PaidInFull: true, HitsAdjustment: 0 }), "b0b49200-26ca-11e3-0aa0-8936ce39ad49": new GamePlayer({ UUID: "b0b49200-26ca-11e3-0aa0-8936ce39ad49", Name: new PlayerName({UUID: "b0b49200-26ca-11e3-0aa0-8936ce39ad49", Nickname: "Lasse F", Firstname: "", Lastname: "", LastModified: 1380213774112}), Info: new PlayerInfo({UUID: "b0b49200-26ca-11e3-0aa0-8936ce39ad49", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1380213774122, OptID: ""}), Buyins: [new GameBuyin({Time: 1550165391550, Round: 1, Amount: 200, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 5000, Points: 0, BustOut: new GameBustOut({Time: 1550173451000, Round: 8, HitmanUUID: ["f6a742a0-1bc9-11e3-0aa0-5a52f3b934ef"], Seat: new GameSeat({TableName: "1", SeatIndex: 0, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})}), ProfileName: "Master", Seat: new GameSeat({TableName: "1", SeatIndex: 0, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 10000, NumberOfTableMoves: 0, PaidInFull: true, HitsAdjustment: 0 }), "52728a20-23d2-11e4-0aa0-72e776477640": new GamePlayer({ UUID: "52728a20-23d2-11e4-0aa0-72e776477640", Name: new PlayerName({UUID: "52728a20-23d2-11e4-0aa0-72e776477640", Nickname: "Hank", Firstname: "", Lastname: "", LastModified: 1408034696130}), Info: new PlayerInfo({UUID: "52728a20-23d2-11e4-0aa0-72e776477640", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1408034696130, OptID: ""}), Buyins: [new GameBuyin({Time: 1550165391550, Round: 1, Amount: 200, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 5000, Points: 0, BustOut: new GameBustOut({Time: 1550173339000, Round: 7, HitmanUUID: ["f482b4f0-1bc9-11e3-0aa0-ed615033decd"], Seat: new GameSeat({TableName: "1", SeatIndex: 6, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})}), ProfileName: "Master", Seat: new GameSeat({TableName: "Table 2", SeatIndex: 3, Locked: false, TableUUID: "33329809-bd5b-4cbb-b35b-bdee9e85f8a4"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 0, PaidInFull: true, HitsAdjustment: 0 }), "3f5282d0-e9d7-11e4-39ca-9b2daa7dc64f": new GamePlayer({ UUID: "3f5282d0-e9d7-11e4-39ca-9b2daa7dc64f", Name: new PlayerName({UUID: "3f5282d0-e9d7-11e4-39ca-9b2daa7dc64f", Nickname: "Marcus H", Firstname: "", Lastname: "", LastModified: 1429807148793}), Info: new PlayerInfo({UUID: "3f5282d0-e9d7-11e4-39ca-9b2daa7dc64f", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1429807148793, OptID: ""}), Buyins: [new GameBuyin({Time: 1550165391550, Round: 1, Amount: 200, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 5000, Points: 0, BustOut: new GameBustOut({Time: 1550168810000, Round: 3, HitmanUUID: ["b6ccc810-26ca-11e3-0aa0-a708768889a0"], Seat: new GameSeat({TableName: "1", SeatIndex: 4, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})}), ProfileName: "Master", Seat: new GameSeat({TableName: "Table 2", SeatIndex: 6, Locked: false, TableUUID: "33329809-bd5b-4cbb-b35b-bdee9e85f8a4"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 0, PaidInFull: true, HitsAdjustment: 0 }), "b6ccc810-26ca-11e3-0aa0-a708768889a0": new GamePlayer({ UUID: "b6ccc810-26ca-11e3-0aa0-a708768889a0", Name: new PlayerName({UUID: "b6ccc810-26ca-11e3-0aa0-a708768889a0", Nickname: "Planting", Firstname: "", Lastname: "", LastModified: 1380213784337}), Info: new PlayerInfo({UUID: "b6ccc810-26ca-11e3-0aa0-a708768889a0", StreetAddress: "", City: "", State: "", Zipcode: "", Country: "", Phone1: "", Phone2: "", Email1: "", Email2: "", Notes: "", LastModified: 1380213784337, OptID: ""}), Buyins: [new GameBuyin({Time: 1550165391550, Round: 1, Amount: 200, PersonalBounty: 0, Rake: new PerPlayerRake([20]), Chips: 5000, Points: 0, BustOut: new GameBustOut({Time: 1550171254000, Round: 6, HitmanUUID: ["f6a742a0-1bc9-11e3-0aa0-5a52f3b934ef"], Seat: new GameSeat({TableName: "1", SeatIndex: 1, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})}), ProfileName: "Master", Seat: new GameSeat({TableName: "1", SeatIndex: 1, Locked: false, TableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})})], AddOns: [], CashAdjustment: 0, PointsAdjustment: 0, ChipCount: 0, NumberOfTableMoves: 0, PaidInFull: true, HitsAdjustment: 0 })}), Chops: new GameChops({Chops: []}), Config: new GamePlayersConfig({TrackPlayers: true, NumberOfEntries: 0, NumberOfPlayers: 0, NumberOfRebuys: 0, NumberOfAddOns: 0, FullCreditHit: true})}), Levels: new GameLevels({Levels: [new GameRound({Minutes: 20, SmallBlind: 25, BigBlind: 50, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 50, BigBlind: 100, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 75, BigBlind: 150, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 5, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: false, Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 100, BigBlind: 200, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 150, BigBlind: 300, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameBreak({Minutes: 20, Tokens: new TokenOverrides({Tokens: new Map({})}), ChipUp: true, Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 200, BigBlind: 400, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 300, BigBlind: 600, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 400, BigBlind: 800, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 500, BigBlind: 1000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 700, BigBlind: 1400, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 1000, BigBlind: 2000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 1500, BigBlind: 3000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 2000, BigBlind: 4000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 3000, BigBlind: 6000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 5000, BigBlind: 10000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 7000, BigBlind: 14000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 10000, BigBlind: 20000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 15000, BigBlind: 30000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 20000, BigBlind: 40000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 30000, BigBlind: 60000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""}), new GameRound({Minutes: 20, SmallBlind: 40000, BigBlind: 80000, Ante: 0, GameType: 0, GameName: "Texas Hold 'Em", Tokens: new TokenOverrides({Tokens: new Map({})}), Limits: [0, 0, 0, 0, 0, 0, 0, 0], Notes: ""})]}), Prizes: new GamePrizes({Prizes: [new GamePrize({Description: "1st Place", Type: 0, Recipient: 1, AmountType: 1, Amount: 1000, Adjustment: 0, ShareRemainder: true, Points: 0, AwardedToPlayers: ["f482b4f0-1bc9-11e3-0aa0-ed615033decd"], SharedRemainder: 0, CalculatedAmount: 1000, CalculatedPoints: 0, EstimatedAmount: 1000, EstimatedSharedRemainder: 0, Display: true, Lock: false}), new GamePrize({Description: "2nd Place", Type: 0, Recipient: 2, AmountType: 1, Amount: 600, Adjustment: 0, ShareRemainder: false, Points: 0, AwardedToPlayers: ["f6a742a0-1bc9-11e3-0aa0-5a52f3b934ef"], SharedRemainder: 0, CalculatedAmount: 600, CalculatedPoints: 0, EstimatedAmount: 600, EstimatedSharedRemainder: 0, Display: true, Lock: false})], RoundPrizes: 0, RoundToNearest: 1, EstimatedPotInfo: new EstimatedPotData({UseEstimatedPot: false, EstimatedPot: 0, CalculateEstimatedPot: false, NumberOfBuyins: 0, NumberOfRebuys: 0, NumberOfAddOns: 0, CalculatedPot: 0, ShowEstimatedPot: false}), Automatic: true, AutomaticAtTop: true}), Chips: new GameChips({Chips: [new GameChip({ChipID: 1, Label: "Blue", Color: "#0000ff", Value: 25, Use: true, PerPlayer: 0}), new GameChip({ChipID: 2, Label: "Green", Color: "#00ff00", Value: 100, Use: true, PerPlayer: 8}), new GameChip({ChipID: 3, Label: "White", Color: "#ffffff", Value: 500, Use: true, PerPlayer: 4}), new GameChip({ChipID: 4, Label: "Black", Color: "#000000", Value: 1000, Use: true, PerPlayer: 2})], ChipSets: [new ChipSet({Name: "Deep-stack", ChipCounts: new Map({"1": 8, "2": 8, "3": 4, "4": 2})})], EstimatedBuyins: 0, EstimatedRebuys: 0, EstimatedAddOns: 0}), Tables: new GameTables({AutoSuggestMovements: true, MaxPlayerDisparity: 1, Tables: [new GameTable({Name: "1", NumberOfSeats: 8, Seats: [null, null, null, null, null, null, null, "f482b4f0-1bc9-11e3-0aa0-ed615033decd"], Locks: [false, false, false, false, false, false, false, false], DealerButtonSeat: 0, UUID: "abe34b23-9761-4567-bd5f-554a0a50a472"})], BalanceAlgorithm: 0, RandomizeFinalTable: true, LastPlayerMove: new PlayerMovement({Time: 1550165413983, Moves: [new Move({PlayerUUID: "3f5282d0-e9d7-11e4-39ca-9b2daa7dc64f", NewTableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472", NewSeatIndex: 4}), new Move({PlayerUUID: "52728a20-23d2-11e4-0aa0-72e776477640", NewTableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472", NewSeatIndex: 6}), new Move({PlayerUUID: "f482b4f0-1bc9-11e3-0aa0-ed615033decd", NewTableUUID: "abe34b23-9761-4567-bd5f-554a0a50a472", NewSeatIndex: 7})]}), UnavailableSeats: new Map({}), CollapseFirstTables: [], CollapseLastTables: [], CollapseFirstInOrder: false, CollapseLastInOrder: false, SeatPlayersCloseToHome: false, CanSeatUnpaidPlayers: false, AutoAcceptMovementSuggestions: false}), History: new GameHistory({History: [new GameHistoryItem({Time: 1550165391550, Text: "Bosse bought-in (Fee: 200.00, Rake: 20.00, Chips: 5,000, Points: 0.00, Profile: Master)", Source: 0}), new GameHistoryItem({Time: 1550165391550, Text: "Erik S bought-in (Fee: 200.00, Rake: 20.00, Chips: 5,000, Points: 0.00, Profile: Master)", Source: 0}), new GameHistoryItem({Time: 1550165391565, Text: "Hank bought-in (Fee: 200.00, Rake: 20.00, Chips: 5,000, Points: 0.00, Profile: Master)", Source: 0}), new GameHistoryItem({Time: 1550165391565, Text: "Hans KH bought-in (Fee: 200.00, Rake: 20.00, Chips: 5,000, Points: 0.00, Profile: Master)", Source: 0}), new GameHistoryItem({Time: 1550165391565, Text: "Joakim H bought-in (Fee: 200.00, Rake: 20.00, Chips: 5,000, Points: 0.00, Profile: Master)", Source: 0}), new GameHistoryItem({Time: 1550165391565, Text: "Lasse F bought-in (Fee: 200.00, Rake: 20.00, Chips: 5,000, Points: 0.00, Profile: Master)", Source: 0}), new GameHistoryItem({Time: 1550165391581, Text: "Marcus H bought-in (Fee: 200.00, Rake: 20.00, Chips: 5,000, Points: 0.00, Profile: Master)", Source: 0}), new GameHistoryItem({Time: 1550165391581, Text: "Planting bought-in (Fee: 200.00, Rake: 20.00, Chips: 5,000, Points: 0.00, Profile: Master)", Source: 0}), new GameHistoryItem({Time: 1550165702692, Text: "Tournament started", Source: 0}), new GameHistoryItem({Time: 1550165702692, Text: "1, Seat 1: Lasse F", Source: 0}), new GameHistoryItem({Time: 1550165702693, Text: "1, Seat 2: Planting", Source: 0}), new GameHistoryItem({Time: 1550165702694, Text: "1, Seat 3: Bosse", Source: 0}), new GameHistoryItem({Time: 1550165702695, Text: "1, Seat 4: Hans KH", Source: 0}), new GameHistoryItem({Time: 1550165702696, Text: "1, Seat 5: Marcus H", Source: 0}), new GameHistoryItem({Time: 1550165702697, Text: "1, Seat 6: Erik S", Source: 0}), new GameHistoryItem({Time: 1550165702698, Text: "1, Seat 7: Hank", Source: 0}), new GameHistoryItem({Time: 1550165702699, Text: "1, Seat 8: Joakim H", Source: 0}), new GameHistoryItem({Time: 1550166902722, Text: "End of round 1", Source: 0}), new GameHistoryItem({Time: 1550166907754, Text: "Start of round 2", Source: 0}), new GameHistoryItem({Time: 1550167756420, Text: "Erik S busted out of the tournament (1, Seat 6) by Lasse F (1, Seat 1)", Source: 0}), new GameHistoryItem({Time: 1550168107969, Text: "End of round 2", Source: 0}), new GameHistoryItem({Time: 1550168113029, Text: "Start of round 3", Source: 0}), new GameHistoryItem({Time: 1550168810122, Text: "Marcus H busted out of the tournament (1, Seat 5) by Planting (1, Seat 2)", Source: 0}), new GameHistoryItem({Time: 1550169312718, Text: "End of round 3", Source: 0}), new GameHistoryItem({Time: 1550169317778, Text: "Start of break 1", Source: 0}), new GameHistoryItem({Time: 1550169617819, Text: "End of break 1", Source: 0}), new GameHistoryItem({Time: 1550169636859, Text: "Start of round 4", Source: 0}), new GameHistoryItem({Time: 1550169642429, Text: "User initiated next round", Source: 0}), new GameHistoryItem({Time: 1550169642469, Text: "Start of round 5", Source: 0}), new GameHistoryItem({Time: 1550170844627, Text: "End of round 5", Source: 0}), new GameHistoryItem({Time: 1550170849677, Text: "Start of break 2", Source: 0}), new GameHistoryItem({Time: 1550171009303, Text: "User initiated next round", Source: 0}), new GameHistoryItem({Time: 1550171009313, Text: "Start of round 6", Source: 0}), new GameHistoryItem({Time: 1550171254805, Text: "Planting busted out of the tournament (1, Seat 2) by Bosse (1, Seat 3)", Source: 0}), new GameHistoryItem({Time: 1550172214945, Text: "End of round 6", Source: 0}), new GameHistoryItem({Time: 1550172220005, Text: "Start of round 7", Source: 0}), new GameHistoryItem({Time: 1550173339836, Text: "Hank busted out of the tournament (1, Seat 7) by Joakim H (1, Seat 8)", Source: 0}), new GameHistoryItem({Time: 1550173419990, Text: "End of round 7", Source: 0}), new GameHistoryItem({Time: 1550173424520, Text: "Start of round 8", Source: 0}), new GameHistoryItem({Time: 1550173451752, Text: "Lasse F busted out of the tournament (1, Seat 1) by Bosse (1, Seat 3)", Source: 0}), new GameHistoryItem({Time: 1550174624632, Text: "End of round 8", Source: 0}), new GameHistoryItem({Time: 1550174629712, Text: "Start of round 9", Source: 0}), new GameHistoryItem({Time: 1550174931768, Text: "Hans KH busted out of the tournament (1, Seat 4) by Joakim H (1, Seat 8)", Source: 0}), new GameHistoryItem({Time: 1550175829676, Text: "End of round 9", Source: 0}), new GameHistoryItem({Time: 1550175834736, Text: "Start of round 10", Source: 0}), new GameHistoryItem({Time: 1550177034817, Text: "End of round 10", Source: 0}), new GameHistoryItem({Time: 1550177039857, Text: "Start of round 11", Source: 0}), new GameHistoryItem({Time: 1550178239669, Text: "End of round 11", Source: 0}), new GameHistoryItem({Time: 1550178244719, Text: "Start of round 12", Source: 0}), new GameHistoryItem({Time: 1550178338773, Text: "Bosse busted out of the tournament (1, Seat 3) by Joakim H (1, Seat 8)", Source: 0}), new GameHistoryItem({Time: 1550178338783, Text: "Joakim H won the tournament", Source: 0}), new GameHistoryItem({Time: 1550178338783, Text: "Tournament ended", Source: 0})]}), StartTime: 1550165702692, EndTime: 1550178338783, CurrentPeriodDuration: 1200, AccumulatedSeconds: 94, ClockRunning: false, Countdown: 0, CountdownSeconds: 30, CountdownTime: 0, CurrentLevel: 13, Events: new GameEvents({Sounds: [new Sound({Name: "clock", Path: "sounds\\clockSound.wav"}), new Sound({Name: "warning", Path: "sounds\\warningSound.wav"}), new Sound({Name: "final", Path: "sounds\\finalSound.wav"}), new Sound({Name: "handTimer", Path: "sounds\\handTimer.wav"})], Events: [new GameEvent({Description: "when the clock is paused", Trigger: 1, Conditions: new UserFormula({Text: "", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "clock"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "when the clock is unpaused", Trigger: 2, Conditions: new UserFormula({Text: "", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "clock"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "when the clock reaches 60 second(s) during a round or break", Trigger: 0, Conditions: new UserFormula({Text: "(state = 2) && (secondsLeft = 60)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "warning"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "when the clock reaches 3 second(s) during a round or break", Trigger: 0, Conditions: new UserFormula({Text: "(state = 2) && (secondsLeft = 3)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "warning"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "when the clock reaches 2 second(s) during a round or break", Trigger: 0, Conditions: new UserFormula({Text: "(state = 2) && (secondsLeft = 2)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "warning"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "when the clock reaches 1 second(s) during a round or break", Trigger: 0, Conditions: new UserFormula({Text: "(state = 2) && (secondsLeft = 1)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "warning"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "when the clock reaches 0 second(s) during a round or break", Trigger: 0, Conditions: new UserFormula({Text: "(state = 2) && (secondsLeft = 0)", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "final"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0}), new GameEvent({Description: "when the hand timer reaches 0 second(s)", Trigger: 18, Conditions: new UserFormula({Text: "handTimerSecondsLeft = 0", Strict: false}), Actions: [new GameEventAction({Type: 0, Data: new DO({Sound: "handTimer"})})], Omit: false, SoundsBehavior: 0, MessagesBehavior: 0, SoundsPriority: 0, MessagesPriority: 0})], MsgPropSets: new Map({}), DefMsgDuration: 7}), LastModified: 1308654270662, Rules: new GameRules({Tokens: new TokenOverrides({Tokens: new Map({"welcome": new TokenOverride({Name: "welcome", Value: "", IsFile: false, IsHTML: true}), "welcome2": new TokenOverride({Name: "welcome2", Value: "", IsFile: false, IsHTML: true}), "welcome3": new TokenOverride({Name: "welcome3", Value: "", IsFile: false, IsHTML: true}), "announcements": new TokenOverride({Name: "announcements", Value: "", IsFile: false, IsHTML: true}), "announcements2": new TokenOverride({Name: "announcements2", Value: "", IsFile: false, IsHTML: true}), "announcements3": new TokenOverride({Name: "announcements3", Value: "", IsFile: false, IsHTML: true}), "rules": new TokenOverride({Name: "rules", Value: "", IsFile: false, IsHTML: true}), "rules2": new TokenOverride({Name: "rules2", Value: "", IsFile: false, IsHTML: true}), "rules3": new TokenOverride({Name: "rules3", Value: "", IsFile: false, IsHTML: true}), "farewell": new TokenOverride({Name: "farewell", Value: "", IsFile: false, IsHTML: true}), "farewell2": new TokenOverride({Name: "farewell2", Value: "", IsFile: false, IsHTML: true}), "farewell3": new TokenOverride({Name: "farewell3", Value: "", IsFile: false, IsHTML: true})})})})}), L: { V: "3.4.3", L: new LO.Layout({ScreenBox: new LO.ScreenBox({Contents: new Map({"Main Screen": new LO.Screen({Name: "Main Screen", TopElement: new LO.Column({Elements: [new LO.CellRef({CellName: "Title"}), new LO.Row({Elements: [new LO.Column({Elements: [new LO.CellRef({CellName: "Round"}), new LO.CellRef({CellName: "Next Break"}), new LO.CellRef({CellName: "Chips"}), new LO.CellRef({CellName: "Prizes"})], VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#000", Size: 0, Type: 0}), Right: new SBorder({Color: "#000", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#000", Size: 0, Type: 0}), Left: new SBorder({Color: "#000", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})})}), new LO.Column({Elements: [new LO.CellRef({CellName: "Clock"}), new LO.CellRef({CellName: "Blinds"})], VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#000", Size: 0, Type: 0}), Right: new SBorder({Color: "#000", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#000", Size: 0, Type: 0}), Left: new SBorder({Color: "#000", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})})})], VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#000", Size: 0, Type: 0}), Right: new SBorder({Color: "#000", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#000", Size: 0, Type: 0}), Left: new SBorder({Color: "#000", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})})})], VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#000", Size: 0, Type: 0}), Right: new SBorder({Color: "#000", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#000", Size: 0, Type: 0}), Left: new SBorder({Color: "#000", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})})}), BGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "transparent", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Stretch: true, Type: 0, HTMLType: 1})})}), ScreenSets: new LO.ScreenSets({Sets: [new LO.ScreenSet({Name: "noname", ScreenList: [new LO.ScreenRef({Type: 0, ScreenName: "Main Screen", Duration: 120})]})]}), GlobalProps: new LO.GlobalProps({Contents: new Map({"imported group": new LO.PropSet({Name: "imported group", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false})})}), CellBox: new LO.CellBox({Contents: new Map({"Title": new LO.Cell({Name: "Title", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 28, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#365e85", BGColor: "#ffffff", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<title>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 28, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#28772f", BGColor: "#ffffff", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<title>", RotateText: false})]}), "Next Break": new LO.Cell({Name: "Next Break", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "top"}), Styles: new Map({})}), Text: "<nobr>Next Break: <nextbreak></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "top"}), Styles: new Map({})}), Text: "<nobr>Next Break: <nextbreak></nobr>", RotateText: false})]}), "Current Time": new LO.Cell({Name: "Current Time", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Current Time: <currenttime></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Current Time: <currenttime></nobr>", RotateText: false})]}), "Round": new LO.Cell({Name: "Round", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "top"}), Styles: new Map({})}), Text: "<nobr>Round: <round></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "top"}), Styles: new Map({})}), Text: "<nobr>Round: <round></nobr>", RotateText: false})]}), "Chips": new LO.Cell({Name: "Chips", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 1, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "top"}), Styles: new Map({})}), Text: "<chips>\n# Rebuy: <rebuys> / Chip tot: <chipcount>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 1, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "top"}), Styles: new Map({})}), Text: "<chips>\n# Rebuy: <rebuys> / Chip tot: <chipcount>", RotateText: false})]}), "Entries": new LO.Cell({Name: "Entries", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Entries: <entries></nob>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Entries: <entries></nob>", RotateText: false})]}), "Chip Count": new LO.Cell({Name: "Chip Count", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Chip Count: <chipcount></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Chip Count: <chipcount></nobr>", RotateText: false})]}), "Stack": new LO.Cell({Name: "Stack", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Average Stack: <stack><nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Average Stack: <stack><nobr>", RotateText: false})]}), "Prizes": new LO.Cell({Name: "Prizes", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "top"}), Styles: new Map({})}), Text: "<u>Prizes</u><br><prizes>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "top"}), Styles: new Map({})}), Text: "<u>Prizes</u><br><prizes>", RotateText: false})]}), "Clock": new LO.Cell({Name: "Clock", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Tahoma", Size: 177, Bold: true, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<minutes>:<seconds>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "isBreak", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Tahoma", Size: 177, Bold: true, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 1, Type: 0}), Right: new SBorder({Color: "#fff", Size: 1, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 1, Type: 0}), Left: new SBorder({Color: "#fff", Size: 1, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<minutes>:<seconds>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Tahoma", Size: 177, Bold: true, Italic: false, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 1, Type: 0}), Right: new SBorder({Color: "#fff", Size: 1, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 1, Type: 0}), Left: new SBorder({Color: "#fff", Size: 1, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<minutes>:<seconds>", RotateText: false})]}), "Blinds": new LO.Cell({Name: "Blinds", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Breaks", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 80, Bold: false, Italic: true, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 1}), Formula: new UserFormula({Text: "isBreak", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 45, Bold: false, Italic: true, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 1, Type: 0}), Right: new SBorder({Color: "#fff", Size: 1, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 1, Type: 0}), Left: new SBorder({Color: "#fff", Size: 1, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<smallblind> / <bigblind> Ante: <ante><br>\nNext: <nextsmallblind> / <nextbigblind>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 45, Bold: false, Italic: true, Shadow: new FontShadow({On: true, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 1, Type: 0}), Right: new SBorder({Color: "#fff", Size: 1, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 1, Type: 0}), Left: new SBorder({Color: "#fff", Size: 1, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<smallblind> / <bigblind> Ante: <ante><br>\nNext: <nextsmallblind> / <nextbigblind>", RotateText: false})]}), "Players": new LO.Cell({Name: "Players", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Players In: <players></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Players In: <players></nobr>", RotateText: false})]}), "Rebuys": new LO.Cell({Name: "Rebuys", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Rebuys: <rebuys></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Rebuys: <rebuys></nobr>", RotateText: false})]}), "Add-ons": new LO.Cell({Name: "Add-ons", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Add-ons: <addons></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Add-ons: <addons></nobr>", RotateText: false})]}), "Pot": new LO.Cell({Name: "Pot", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Total Pot: <pot></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Total Pot: <pot></nobr>", RotateText: false})]}), "Elapsed Time": new LO.Cell({Name: "Elapsed Time", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Elapsed Time: <elapsedtime></nobr>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "<nobr>Elapsed Time: <elapsedtime></nobr>", RotateText: false})]}), "Tables": new LO.Cell({Name: "Tables", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Tables<br><tables>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Tables<br><tables>", RotateText: false})]}), "Paid Spots": new LO.Cell({Name: "Paid Spots", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Paid Spots<br><numberofvariableprizes>", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "Paid Spots<br><numberofvariableprizes>", RotateText: false})]}), "User 1": new LO.Cell({Name: "User 1", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false})]}), "User 2": new LO.Cell({Name: "User 2", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false})]}), "User 3": new LO.Cell({Name: "User 3", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false})]}), "User 4": new LO.Cell({Name: "User 4", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false})]}), "User 5": new LO.Cell({Name: "User 5", Description: "imported cell", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#365e85", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 24, Bold: false, Italic: true, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#28772f", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#fff", Size: 0, Type: 0}), Right: new SBorder({Color: "#fff", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#fff", Size: 0, Type: 0}), Left: new SBorder({Color: "#fff", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false})]}), "blank": new LO.Cell({Name: "blank", Description: "", PropSets: [new LO.PropSet({Name: "Even Rounds", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#000000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#000", Size: 0, Type: 0}), Right: new SBorder({Color: "#000", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#000", Size: 0, Type: 0}), Left: new SBorder({Color: "#000", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false, Criteria: new LO.StateCrit({Criteria: new LO.CriteriaSpecs({Level: 0, LevelOperator: "=", LevelModifier: "even"}), Formula: new UserFormula({Text: "isRound and (roundNum % 2 = 0)", Strict: false}), UseCriteria: true})}), new LO.PropSet({Name: "Default", Hide: false, VisProps: new LO.VisProps({Font: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#000000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})}), Border: new OBorder({Top: new SBorder({Color: "#000", Size: 0, Type: 0}), Right: new SBorder({Color: "#000", Size: 0, Type: 0}), Bottom: new SBorder({Color: "#000", Size: 0, Type: 0}), Left: new SBorder({Color: "#000", Size: 0, Type: 0})}), Dims: new Dimension({}), Align: new Alignment({Horizontal: "center", Vertical: "middle"}), Styles: new Map({})}), Text: "", RotateText: false})]})})}), BannerSets: new LO.BannerSets({Contents: new Map({})}), OtherProps: new LO.OtherProps({Properties: new Map({"0": new LO.SeatingChartProps({SysScreenProps: new LO.SysScreenProps({HeaderFont: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#000000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), MainFont: new Font({Name: "Arial", Size: 14, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#000000", BGColor: "#ffffff", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#7288a3", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Header: "<table border=0 cellspacing=0 cellpadding=0><tr><td style='font-family: Arial; font-size: 36pt; font-weight: bold; color: #ffffff; filter: dropshadow(OffX=3, OffY=3, Color=#000000);'>Seating Chart</td></tr></table>", Columns: ["Name", "Seat"], ColumnNames: new Map({}), UseAltBGColor: false, AltBGColor: "#dddddd", FullScreenWide: false, HideScrollbars: false, PlayerImageSize: 100, LineSpacing: 1, CenterAllColumns: false}), FormatProps: new LO.SCFormatProps({ShowEmptyTables: true, ShowDealerButton: false, Columns: 3, TableSpacingDims: new Dimension({Width: 10, Height: 20}), TableVerticalAlign: "middle", ShowPlayerImages: false}), HighlightProps: new LO.SCHighlightProps({Mode: 0, Time: 60, Font: new Font({Name: "Arial", Size: 14, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#000000", BGColor: "#8aa7ca", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})})}), TableProps: new LO.SCTableProps({Images: [], Rollover: true})}), "1": new LO.PlayerRankingsProps({SysScreenProps: new LO.SysScreenProps({HeaderFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#002040", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), MainFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#004080", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Header: "<table border=0 cellspacing=0 cellpadding=0><tr><td style='font-family: Arial; font-size: 36pt; font-weight: bold; color: #ffffff; filter: dropshadow(OffX=3, OffY=3, Color=#000000);'>Player Rankings</td></tr></table>", Columns: ["Rank", "Name", "TimeOut", "RoundOut"], ColumnNames: new Map({}), UseAltBGColor: false, AltBGColor: "#0070b0", FullScreenWide: false, HideScrollbars: false, PlayerImageSize: 100, LineSpacing: 1, CenterAllColumns: false}), ShowAllPlayers: true, OmitSeconds: false, PlayerMode: 0, SortMode: 0, SortSpec: new SortSpecifier({Columns: [{Column: "Rank", Reverse: false}, {Column: "Name", Reverse: false}, {Column: "ChipCount", Reverse: true}]})}), "2": new LO.StatusIcon({Loc: new Location({Type: 2, X: 0, Y: 0}), Color: "#000", Opacity: 40, Size: 32}), "3": new LO.StatusIcon({Loc: new Location({Type: 2, X: 0, Y: 0}), Color: "#000", Opacity: 40, Size: 32}), "4": new LO.StatusIcon({Loc: new Location({Type: 2, X: 0, Y: 0}), Color: "#000", Opacity: 40, Size: 32}), "5": new LO.StatusIcon({Loc: new Location({Type: 2, X: 0, Y: 0}), Color: "#000", Opacity: 40, Size: 32}), "6": new LO.ScheduleProps({SysScreenProps: new LO.SysScreenProps({HeaderFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#009500", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), MainFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#002f00", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Header: "<table border=0 cellspacing=0 cellpadding=0><tr><td style='font-family: Arial; font-size: 36pt; font-weight: bold; color: #ffffff; filter: dropshadow(OffX=3, OffY=3, Color=#000000)'>Blinds Schedule</td></tr></table>", Columns: ["Level", "Duration", "GameType", "GameName", "SmallBlind", "BigBlind", "Limit1", "Limit2", "Ante"], ColumnNames: new Map({}), UseAltBGColor: false, AltBGColor: "#004000", FullScreenWide: false, HideScrollbars: false, PlayerImageSize: 100, LineSpacing: 1, CenterAllColumns: false}), BreakLineFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#880000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), DurationFormat: 0, OmitPreviousLevels: false}), "7": new LO.PlayerMovementProps({SysScreenProps: new LO.SysScreenProps({HeaderFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#400000", BGColor: "#ffffff", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), MainFont: new Font({Name: "Tahoma", Size: 24, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#400000", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Header: "<table border=0 cellspacing=0 cellpadding=0><tr><td style='font-family: Arial; font-size: 36pt; font-weight: bold; color: #ffffff; filter: dropshadow(OffX=3, OffY=3, Color=#000000)'>Player Movement</td></tr></table>", Columns: ["Name", "CurrentSeat", "MovingTo"], ColumnNames: new Map({}), UseAltBGColor: false, AltBGColor: "#5e0000", FullScreenWide: false, HideScrollbars: false, PlayerImageSize: 100, LineSpacing: 1, CenterAllColumns: false}), SortColumn: "Name", OmitCurrentSeat: false}), "8": new LO.HandTimerProps({MainFont: new Font({Name: "Segoe UI", Size: 96, Bold: true, Italic: false, Color: "#000088", BGColor: "transparent", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#d4d0c8", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})})}), "9": new LO.SeatingListProps({SysScreenProps: new LO.SysScreenProps({HeaderFont: new Font({Name: "Arial", Size: 18, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#ffffff", BGColor: "#000000", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), MainFont: new Font({Name: "Arial", Size: 14, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#000000", BGColor: "#ffffff", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})}), ScreenBGProps: new LO.ScreenBGProps({OverrideBGs: false, OverrideBorders: false, Color: "#7288a3", BGImg: new BGImage({RepeatMode: 0, Align: new Alignment({Horizontal: "center", Vertical: "middle"})})}), Header: "<table border=0 cellspacing=0 cellpadding=0><tr><td style='font-family: Arial; font-size: 36pt; font-weight: bold; color: #ffffff; filter: dropshadow(OffX=3, OffY=3, Color=#000000);'>Seating Chart</td></tr></table>", Columns: ["Name", "Seat"], ColumnNames: new Map({}), UseAltBGColor: false, AltBGColor: "#dddddd", FullScreenWide: false, HideScrollbars: false, PlayerImageSize: 100, LineSpacing: 1, CenterAllColumns: false}), FormatProps: new LO.SLFormatProps({NumColumns: 1, SortByName: true}), HighlightProps: new LO.SCHighlightProps({Mode: 0, Time: 60, Font: new Font({Name: "Arial", Size: 14, Bold: false, Italic: false, Shadow: new FontShadow({On: false, OffsetX: 3, OffsetY: 3, Color: "black"}), Color: "#000000", BGColor: "#8aa7ca", Underline: false, Grad: new Gradient({ColorFrom: "transparent", ColorTo: "transparent", Type: 0, FGColor: "transparent", BGColor: "transparent"})})})})})}), Tokens: new TokenOverrides({Tokens: new Map({})}), Settings: new LO.LayoutSettings({})}) } }